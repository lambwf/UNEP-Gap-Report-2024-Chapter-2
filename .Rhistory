#
# data_ghg <- rbind(data_ghg,data_ghg_ng20)
cc_aggregates <- data_ghg %>%
ungroup() %>%
select(iso,country) %>%
distinct()
cc_aggregates <- left_join(cc_aggregates,cc_AU,by="iso")
cc_aggregates <- left_join(cc_aggregates,cc_EU,by="iso")
cc_aggregates <- left_join(cc_aggregates,cc_G20,by="iso")
cc_aggregates <- left_join(cc_aggregates,cc_G7,by="iso")
#cc_aggregates <- left_join(cc_aggregates,cc_nG20,by="iso")
cc_aggregates <- cc_aggregates %>%
mutate(G20=ifelse(!is.na(EU),"1",G20)) %>%
mutate(G20=ifelse(!is.na(AU),"1",G20))
cc_aggregates <- gather(cc_aggregates,var,value,-iso,-country) %>%
mutate(value=ifelse(value=="1","x",NA))
cc_aggregates <- spread(cc_aggregates,var,value)
data_ghg <- data_ghg %>%
arrange(iso,country,gas,year,sector_lv2)
data_countries <- data_ghg %>%
filter(iso!="AU55") %>%
filter(gas!="CO2 LULUCF") %>%
group_by(iso,country,year,gas) %>%
summarise(value=sum(value,na.rm=TRUE)) %>%
mutate(dataset="EDGARv9")
data_primap <- read.csv("sources/Guetschow_et_al_2024-PRIMAP-hist_v2.5.1_final_27-Feb-2024.csv")
data_primap <- gather(data_primap,year,value,X1750:X2022)
data_primap$year <- gsub("X","",data_primap$year)
names(data_primap) <- c("source","scenario","provenance","area","gas","unit","category","year","value")
data_primap <- data_primap %>%
filter(category=="M.0.EL") %>%
filter(scenario=="HISTCR") %>%
filter(gas %in% c("CO2","CH4","N2O","FGASES (AR6GWP100)")) %>%
mutate(year=as.numeric(year)) %>%
filter(year>=1970)
data_primap <- left_join(data_primap,gwps %>% select(gas=Species,AR6GWP100))
data_primap <- data_primap %>%
mutate(AR6GWP100=ifelse(is.na(AR6GWP100),1,AR6GWP100)) %>%
mutate(value=value*AR6GWP100) %>%
mutate(value=value*1000)
data_primap <- data_primap %>%
mutate(country=countrycode(area,"iso3c","country.name")) %>%
select(iso=area,country,year,gas,value) %>%
mutate(dataset="PRIMAP CR v2.5.1") %>%
mutate(gas=ifelse(gas=="CO2","CO2 Fossil",gas)) %>%
mutate(gas=ifelse(gas=="FGASES (AR6GWP100)","F-gases",gas))
data_countries <- rbind(data_countries,data_primap)
load(url('https://github.com/lambwf/Codebase/raw/main/data/data_crfs_2023.RData'))
data_crfs <- left_join(data_crfs,gwps %>% select(gas=Species,AR6GWP100))
data_crfs <- data_crfs %>%
mutate(value=as.numeric(value)) %>%
mutate(AR6GWP100=ifelse(is.na(AR6GWP100),1,AR6GWP100)) %>%
mutate(value=value*AR6GWP100) %>%
mutate(value=value*1000)
data_crfs <- data_crfs %>%
mutate(gas=ifelse(!gas %in% c("CO2","CO2 LULUCF","CH4","N2O"),"F-gases",gas)) %>%
group_by(across(c(-value,-AR6GWP100))) %>%
summarise(value=sum(value,na.rm=TRUE)) %>%
mutate(year=as.numeric(year)) %>%
mutate(gas=ifelse(gas=="CO2","CO2 Fossil",gas)) %>%
mutate(dataset="CRFs_2023") %>%
ungroup() %>%
select(iso,country,year,gas,value,dataset)
data_countries <- rbind(data_countries,data_crfs)
data_countries <- rbind(data_countries,
data_lulucf %>%
select(iso,country,year,gas,value) %>%
mutate(dataset="Grassi et al.") %>%
mutate(iso=ifelse(iso=="EUR","EU27",iso)) %>%
filter(year<=2021))
# data_countries <- left_join(data_countries,cc_G20 %>%
#                               add_row(iso="FRA",G20="1") %>%
#                               add_row(iso="DEU",G20="1") %>%
#                               add_row(iso="ITA",G20="1") %>%
#                               add_row(iso="ZAF",G20="1"),by="iso")
# data_countries <- data_countries %>%
#   filter(G20==1) %>%
#   select(-G20)
names <- data_countries %>%
ungroup() %>%
select(iso) %>%
distinct() %>%
arrange(iso) %>%
mutate(country=countrycode(iso,"iso3c","country.name")) %>%
mutate(country=ifelse(iso=="AIR","Intl. Aviation",country)) %>%
mutate(country=ifelse(iso=="SEA","Intl. Shipping",country)) %>%
mutate(country=ifelse(iso=="EU27","European Union",country))
data_countries <- left_join(data_countries %>% ungroup() %>% select(-country),names,by="iso") %>%
filter(!is.na(country)) %>%
select(iso,country,year,gas,dataset,value) %>%
arrange(iso,country,year,gas,dataset)
data_countries <- spread(data_countries,year,value)
addWorksheet(wb,"data_comparison")
writeData(wb, sheet = "data_comparison", data_countries, colNames = T, rowNames = F)
high_emitters <- data_ghg %>%
filter(year==2023) %>%
filter(!iso %in% c("WLD","G20","G7","AU55")) %>%
group_by(country,iso) %>%
summarise(value=sum(value,na.rm=TRUE)) %>%
ungroup() %>%
arrange(desc(value)) %>%
mutate(rank=1) %>%
mutate(rank=cumsum(rank)) %>%
head(6) %>%
select(iso,rank)
data_countries <- left_join(data_ghg,high_emitters) %>%
filter(!is.na(rank))
data_countries <- data_countries %>%
filter(year>=1990) %>%
group_by(iso,country,rank,sector_lv1,sector_lv2,sector_lv2_order,sector_lv2_colours,sector_lv2_icons,year) %>%
summarise(value=sum(value,na.rm=TRUE)/1e6)
data_countries$sector_lv2 <- fct_relevel(data_countries$sector_lv2,"AFOLU: LULUCF")
labels_colours <- data_countries %>%
filter(iso=="CHN") %>%
ungroup() %>%
filter(year==2021) %>%
arrange((sector_lv2)) %>%
mutate(position=1) %>%
mutate(position=cumsum(position))
data_countries$country = as.factor(data_countries$country)
data_countries$country <- fct_reorder(data_countries$country,data_countries$rank)
data_countries_crfs=left_join(data_crfs,high_emitters) %>%
filter(!is.na(rank)) %>%
filter(gas!="CO2 LULUCF") %>%
group_by(iso,country,rank,year) %>%
summarise(value=sum(value,na.rm=T)/1e6)
data_countries_crfs$country <- as.factor(data_countries_crfs$country)
data_countries_crfs$country <- fct_reorder(data_countries_crfs$country,data_countries_crfs$rank)
custom_scales <- data.frame(country=c("China","United States","India","European Union","Russia","Brazil"),
x=2023,y=c(15000,10000,5000,5000,5000,5000))
custom_scales$country <- as.factor(custom_scales$country)
custom_scales$country <- fct_relevel(custom_scales$country,"China","United States","India","European Union","Russia","Brazil")
p1 <- data_countries %>%
ggplot(aes(x=year,y=value,fill=sector_lv2)) +
facet_wrap(.~country,scales="free_y",ncol=2) +
geom_area(color="#636363") +
geom_path(data=data_countries_crfs,
inherit.aes=FALSE,aes(x=year,y=value,group=iso),size=1) +
geom_blank(data=custom_scales,inherit.aes=FALSE,aes(x=x,y=y)) +
theme_wl() +
scale_fill_manual(values = labels_colours$sector_lv2_colours) +
ylab("GHG Emissions (MtCO2e/year)") +
theme(axis.title.x = element_blank(),
axis.title.y = element_text(size=11),
panel.grid.major.x = element_blank(),
strip.background = element_blank(),
strip.text = element_text(hjust=0,size=11,color="#636363",face="bold"),
legend.position = "none",
panel.background = element_blank(),
panel.spacing = unit(0.5,"cm"))
labels_colours <- labels_colours %>%
arrange(desc(sector_lv2_order))
p2 <- labels_colours %>%  ggplot(.,aes(y=rev(sector_lv2_order),label=sector_lv2)) +
geom_point(aes(x=1.9,fill=as.factor(rev(sector_lv2_order))),
shape=22,size=4,color='#636363') +
geom_line(data=data.frame(x=c(1.85,1.95),y=c(0,0)),inherit.aes=FALSE,aes(x=x,y=y),color="black",size=1) +
geom_image(aes(x=2.5+ifelse(sector_lv2=="AFOLU: LULUCF",str_length(sector_lv2)+2,str_length(sector_lv2))/26,image=sector_lv2_icons),by = "height",size=0.06)+
geom_text(hjust=0,aes(x=2),color='#636363',vjust=0.5) +
geom_text(data=data.frame(label="Inventory (excl. LULUCF)"),hjust=0,inherit.aes=FALSE,aes(x=2,y=0,label=label),color='#636363',vjust=0.5) +
theme_wl() +
scale_fill_manual(values = labels_colours$sector_lv2_colours) +
scale_x_continuous(limits=c(1.8,3.5),expand = c(0,0)) +
scale_y_continuous(limits=c(-0.5,9.5),expand = c(0,0)) +
theme(axis.title = element_blank(),
panel.border = element_blank(),
legend.position="none",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
plot.title.position = "plot",
plot.title = element_text(size=11,colour='#bdbdbd',hjust=1,face = "plain"),
plot.background = element_blank(),
plot.margin = unit(c(0,0,0,0),"cm"))
p1 + (plot_spacer() / p2 / plot_spacer() + plot_layout(heights=c(2,3,2))) + plot_layout(widths=c(6,2))
blarg <- data_countries_crfs %>%
filter(iso %in% c("USA","EU27","RUS"))
View(blarg)
blarg <- spread(blarg,year,value)
write.xlsx(blarg,"blarg.xlsx")
knitr::opts_chunk$set(echo = FALSE)
rm(list = ls())
library(tidyverse)
library(openxlsx)
library(countrycode)
library(ggrepel)
library(patchwork)
library(zoo)
library(RColorBrewer)
library(WDI)
source("https://raw.githubusercontent.com/lambwf/Codebase/main/figure_style.R")
source("https://raw.githubusercontent.com/lambwf/Codebase/main/growth_rate.R")
wd_ember <- read.csv("Sources/EMBER_electricity_yearly_full_release_long_format.csv")
wd_ember <- wd_ember %>%
filter(Category=="Electricity generation") %>%
filter(Unit=="TWh")
wd_ember <- wd_ember %>%
mutate(category=ifelse(Variable=="Wind and Solar","Wind, Solar, Hydro",NA)) %>%
mutate(category=ifelse(Variable=="Coal","Fossil (coal)",category)) %>%
mutate(category=ifelse(Variable=="Gas","Fossil (gas)",category)) %>%
mutate(category=ifelse(Variable=="Nuclear","Nuclear",category)) %>%
mutate(category=ifelse(Variable=="Bioenergy","Other renewable",category)) %>%
mutate(category=ifelse(Variable=="Hydro","Wind, Solar, Hydro",category)) %>%
mutate(category=ifelse(Variable=="Other Renewables","Other renewable",category)) %>%
mutate(category=ifelse(Variable=="Other Fossil","Other Fossil",category)) %>%
mutate(category=ifelse(Variable=="Total Generation","Total",category)) %>%
filter(!is.na(category))
# wd_ember <- wd_ember %>%
#   mutate(category=ifelse(Variable=="Wind and Solar","Renewable (Wind & Solar)",NA)) %>%
#   mutate(category=ifelse(Variable=="Coal","Fossil (coal)",category)) %>%
#   mutate(category=ifelse(Variable=="Gas","Fossil (gas)",category)) %>%
#   mutate(category=ifelse(Variable=="Nuclear","Nuclear",category)) %>%
#   mutate(category=ifelse(Variable=="Bioenergy","Renewable (other)",category)) %>%
#   mutate(category=ifelse(Variable=="Hydro","Renewable (other)",category)) %>%
#   mutate(category=ifelse(Variable=="Other Renewables","Renewable (other)",category)) %>%
#   mutate(category=ifelse(Variable=="Other Fossil","Fossil (other)",category)) %>%
#   mutate(category=ifelse(Variable=="Total Generation","Total",category)) %>%
#   filter(!is.na(category))
wd_ember <- rbind(wd_ember %>% filter(Area.type=="Country"),
wd_ember %>% filter(Area=="World"))
wd_ember <- wd_ember %>%
select(country=Area,iso=Country.code,year=Year,EU,G20,category,value=Value) %>%
mutate(year=as.numeric(year)) %>%
mutate(value=as.numeric(value)) %>%
mutate(sector="Power") %>%
mutate(units="TWh")
wd_ember <- wd_ember %>%
group_by(country,sector,category,units,year) %>%
summarise(value=sum(value,na.rm=TRUE))
wd_iea <- read.csv("sources/not public/WBAL_17052024175316637.csv")
wd_iea <- wd_iea %>%
mutate(sector=Flow) %>%
mutate(sector=ifelse(sector=="Residential","Buildings",sector)) %>%
mutate(sector=ifelse(sector=="Commercial and public services","Buildings",sector)) %>%
select(country=Country,sector,product=Product,year=Time,value=Value)
wd_iea <- wd_iea %>%
filter(year>=1990)
# iea_industry <- read.xlsx("sources/not public/iea_web_2021.xlsx",sheet=1)
# iea_transport <- read.xlsx("sources/not public/iea_web_2021.xlsx",sheet=2)
# iea_residential <- read.xlsx("sources/not public/iea_web_2021.xlsx",sheet=3)
# iea_commercial <- read.xlsx("sources/not public/iea_web_2021.xlsx",sheet=4)
#
# wd_iea <- rbind(iea_industry %>% mutate(sector="Industry"),
#                 iea_transport %>% mutate(sector="Transport"))
# wd_iea <- rbind(wd_iea,iea_residential %>% mutate(sector="Buildings"))
# wd_iea <- rbind(wd_iea,iea_commercial %>% mutate(sector="Buildings"))
#
# wd_iea <- gather(wd_iea,year,value,`1960`:`2019`)
# wd_iea <- wd_iea %>%
#   rename(country=COUNTRY,product=PRODUCT) %>%
#   mutate(value=as.numeric(value)) %>%
#   mutate(year=as.numeric(year)) %>%
#   filter(year>=1990)
wd_iea <- wd_iea %>%
group_by(country,sector,product,year) %>%
summarise(value=sum(value,na.rm=T)) %>%
arrange(country,sector,product)
write.xlsx(wd_iea %>%
filter(country=="World") %>%
filter(year==2019),"cc_iea_product_split.xlsx")
cc_products <- read.xlsx("Sources/cc_iea_product_split.xlsx")
wd_iea <- left_join(wd_iea,cc_products %>% select(sector,product,category))
wd_iea <- wd_iea %>%
filter(!is.na(category)) %>%
mutate(units="EJ") %>%
group_by(country,sector,category,units,year) %>%
summarise(value=sum(value)/1e6)
blarg <- wd_iea %>%
filter(country=="World") %>%
filter(year==2022)
wd_data <- rbind(wd_iea,wd_ember)
########## country harmonisation
wd_data_isos <- wd_data %>%
filter(!grepl("OECD",country)) %>%
filter(!grepl("Memo",country)) %>%
filter(!grepl("Africa",country)) %>%
filter(!grepl("Soviet Union",country)) %>%
ungroup() %>%
select(country) %>%
distinct() %>%
mutate(iso=countrycode(country,"country.name","iso3c"))
wd_data <- left_join(wd_data,wd_data_isos,by = join_by(country))
wd_data <- wd_data %>% mutate(iso=ifelse(country=="World","WLD",iso))
wd_data_isos <- wd_data %>%
ungroup() %>%
select(iso) %>%
distinct() %>%
mutate(name=countrycode(iso,"iso3c","country.name")) %>%
mutate(name=ifelse(iso=="WLD","World",name))
wd_data <- left_join(wd_data,wd_data_isos)
wd_data <- wd_data %>%
mutate(country=name) %>%
select(-name)
########### merge EU
cc_EU <- read.csv("https://raw.githubusercontent.com/openclimatedata/countrygroups/main/data/european-union.csv") %>%
select(iso=Code) %>%
mutate(EU="EU27")
wd_data <- left_join(wd_data,cc_EU,by="iso")
wd_data <- wd_data %>%
mutate(iso=ifelse(!is.na(EU),EU,iso)) %>%
mutate(country=ifelse(!is.na(EU),EU,country))
wd_data <- wd_data %>%
group_by(country,iso,sector,category,units,year) %>%
summarise(value=sum(value,na.rm=T))
########### get G20
cc_G20 <- read.csv("https://raw.githubusercontent.com/openclimatedata/countrygroups/main/data/g20.csv") %>%
select(iso=Code) %>%
mutate(G20="G20")
wd_data <- left_join(wd_data,cc_G20,by="iso")
wd_data <- wd_data %>%
mutate(G20=ifelse(iso=="EU27","G20",G20))
########### choose countries
wd_data <- wd_data %>%
mutate(regions=ifelse(iso %in% c("USA","CHN","IND","EU27","RUS","BRA"),country,NA)) %>%
mutate(regions=ifelse(country=="World",country,regions))
# wd_data_g20 <- wd_data %>%
#   filter(G20=="G20") %>%
#   filter(is.na(regions)) %>%
#   mutate(iso="G20 (other)") %>%
#   mutate(country="G20 (other)") %>%
#   mutate(regions="G20 (other)") %>%
#   group_by(iso,country,regions,sector,category,units,year) %>%
#   summarise(value=sum(value,na.rm=T))
#
# wd_data <- rbind(wd_data,wd_data_g20)
wd_data <- wd_data %>%
filter(!is.na(regions)) %>%
select(country,iso,sector,category,units,year,value)
blarg <- wd_data %>% filter(country=="World") %>% filter(year==2019)
wd_data$country <- as.factor(wd_data$country)
#wd_data$country <- fct_relevel(wd_data$country,"World","China","United States","India","EU27","G20 (other)")
wd_data$country <- fct_relevel(wd_data$country,"World","China","United States","India","EU27","Russia","Brazil")
wd_data$category <- as.factor(wd_data$category)
wd_power <- wd_data %>%
filter(category!="Total") %>%
filter(sector=="Power") %>%
group_by(country,iso,sector,year) %>%
mutate(sector_total=sum(value)) %>%
mutate(ratio=value/sector_total) %>%
mutate(ratio=ratio*100)
p1 <- wd_power %>% filter(category %in% c("Fossil (coal)","Fossil (gas)","Wind, Solar, Hydro","Nuclear")) %>%
filter(year<=2022) %>%
ggplot(.,aes(x=year,y=ratio,color=category,group=category)) +
geom_path(size=1) +
geom_text_repel(data=wd_power %>%
filter(year==2022) %>%
filter(category %in% c("Fossil (coal)","Fossil (gas)","Wind, Solar, Hydro","Nuclear")),
inherit.aes=FALSE,aes(x=2025,y=ratio,label=round(ratio),color=category),
nudge_x      = 0.25,
direction    = "y",
hjust        = 0,
point.size = NA,
size=3,
show.legend = FALSE,
min.segment.length = Inf
) +
theme_wl() +
facet_wrap(.~country,nrow=1) +
scale_x_continuous(limits=c(1990,2030),breaks=c(2000,2021)) +
scale_y_continuous(limits=c(0,100))+
scale_color_manual(values=c("#525252","#bf812d","#35978f","#80cdc1")) +
labs(title="Power sector",
subtitle="Share of annual electricity production (%)") +
theme(axis.title=element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
legend.title=element_blank(),
legend.margin = margin(0, 0, 0, 0),
legend.spacing.x = unit(0, "mm"),
legend.spacing.y = unit(0, "mm"))
wd_industry <- wd_data %>%
filter(category!="Total") %>%
filter(sector=="Industry") %>%
group_by(country,iso,sector,year) %>%
mutate(sector_total=sum(value)) %>%
mutate(ratio=value/sector_total) %>%
mutate(ratio=ratio*100) %>%
filter(year<=2021)
p2 <- wd_industry %>% filter(category %in% c("Fossil (coal)","Fossil (gas)","Fossil (oil)","Power sector")) %>%
ggplot(.,aes(x=year,y=ratio,color=category,group=category)) +
geom_path(size=1) +
geom_text_repel(data=wd_industry %>% filter(year==2021) %>% filter(category %in% c("Fossil (coal)","Fossil (gas)","Fossil (oil)","Power sector")),
inherit.aes=FALSE,aes(x=2025,y=ratio,label=round(ratio),color=category),
nudge_x      = 0.25,
direction    = "y",
point.size = NA,
hjust        = 0,
size=3,
show.legend = FALSE,
min.segment.length = Inf
) +
theme_wl() +
facet_wrap(.~country,nrow=1) +
scale_x_continuous(limits=c(1990,2030),breaks=c(2000,2021)) +
scale_y_continuous(limits=c(0,100))+
#scale_colour_manual(breaks=levels(wd_data$category),values = my_colors$colours) +
scale_color_manual(values=c("#525252","#bf812d","#d8b365","#35978f")) +
labs(title="Industry",
subtitle="Share of annual final energy consumption (%)") +
theme(axis.title=element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
legend.title=element_blank(),
legend.margin = margin(0, 0, 0, 0),
legend.spacing.x = unit(0, "mm"),
legend.spacing.y = unit(0, "mm"))
wd_buildings <- wd_data %>%
filter(category!="Total") %>%
filter(sector=="Buildings") %>%
group_by(country,iso,sector,year) %>%
mutate(sector_total=sum(value)) %>%
mutate(ratio=value/sector_total) %>%
mutate(ratio=ratio*100) %>%
filter(year<=2021)
wd_buildings$category <- fct_relevel(wd_buildings$category,"Bioenergy",after = Inf)
p3 <- wd_buildings %>% filter(category %in% c("Fossil (gas)","Fossil (oil)","Power sector","Bioenergy")) %>%
ggplot(.,aes(x=year,y=ratio,color=category,group=category)) +
geom_path(size=1) +
geom_text_repel(data=wd_buildings %>% filter(year==2021) %>% filter(category %in% c("Fossil (gas)","Fossil (oil)","Power sector","Bioenergy")),
inherit.aes=FALSE,aes(x=2025,y=ratio,label=round(ratio),color=category),
nudge_x      = 0.25,
direction    = "y",
hjust        = 0,
point.size = NA,
size=3,
show.legend = FALSE,
min.segment.length = Inf
) +
theme_wl() +
facet_wrap(.~country,nrow=1) +
scale_x_continuous(limits=c(1990,2030),breaks=c(2000,2021)) +
scale_y_continuous(limits=c(0,100))+
#scale_colour_manual(breaks=levels(wd_data$category),values = my_colors$colours) +
scale_color_manual(values=c("#bf812d","#d8b365","#35978f","#80cdc1")) +
labs(title="Buildings",
subtitle="Share of annual final energy consumption (%)") +
theme(axis.title=element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
legend.title=element_blank(),
legend.margin = margin(0, 0, 0, 0),
legend.spacing.x = unit(0, "mm"),
legend.spacing.y = unit(0, "mm"))
wd_transport <- wd_data %>%
filter(category!="Total") %>%
filter(sector=="Transport") %>%
group_by(country,iso,sector,year) %>%
mutate(sector_total=sum(value)) %>%
mutate(ratio=value/sector_total) %>%
mutate(ratio=ratio*100) %>%
filter(year<=2021)
wd_transport$category <- fct_relevel(wd_transport$category,"Bioenergy",after = Inf)
p4 <- wd_transport %>% filter(category %in% c("Fossil (gas)","Fossil (oil)","Power sector","Bioenergy")) %>%
ggplot(.,aes(x=year,y=ratio,color=category,group=category)) +
geom_path(size=1) +
geom_text_repel(data=wd_transport %>% filter(year==2021) %>% filter(category %in% c("Fossil (gas)","Fossil (oil)","Power sector","Bioenergy")),
inherit.aes=FALSE,aes(x=2025,y=ratio,label=round(ratio),color=category),
nudge_x      = 0.25,
direction    = "y",
hjust        = 0,
point.size = NA,
size=3,
show.legend = FALSE,
min.segment.length = Inf
) +
theme_wl() +
facet_wrap(.~country,nrow=1) +
scale_x_continuous(limits=c(1990,2030),breaks=c(2000,2021)) +
scale_y_continuous(limits=c(0,100)) +
#scale_colour_manual(breaks=levels(wd_data$category),values = my_colors$colours) +
scale_color_manual(values=c("#bf812d","#d8b365","#35978f","#80cdc1")) +
#scale_color_manual(values=c("#8c510a","#35978f")) +
labs(title="Transport",
subtitle="Share of annual final energy consumption (%)") +
theme(axis.title=element_blank(),
legend.title=element_blank(),
legend.margin = margin(0, 0, 0, 0),
legend.spacing.x = unit(0, "mm"),
legend.spacing.y = unit(0, "mm"))
p1 / p2 / p3 / p4
wd_table <- wd_power %>%
filter(category %in% c("Fossil (coal)","Fossil (gas)","Wind, Solar, Hydro","Nuclear")) %>%
filter(year<=2022)
wd_table <- rbind(wd_table,wd_industry %>% filter(category %in% c("Fossil (coal)","Fossil (gas)","Fossil (oil)","Power sector")))
wd_table <- rbind(wd_table,wd_buildings %>% filter(category %in% c("Fossil (gas)","Fossil (oil)","Power sector","Bioenergy")))
wd_table <- rbind(wd_table,wd_transport %>% filter(category %in% c("Fossil (gas)","Fossil (oil)","Power sector","Bioenergy")))
wd_table_ratios <- wd_table %>%
ungroup() %>%
group_by(sector,country,category) %>%
summarise(ratio_in_final_year=round(last(ratio)))
wd_table <- spread(wd_table %>% ungroup() %>% select(-sector_total,-ratio,-iso),year,value)
wd_table <- left_join(wd_table,wd_table_ratios)
wd_table$sector <- as.factor(wd_table$sector)
wd_table$sector <- fct_relevel(wd_table$sector,"Power","Industry","Buildings","Transport")
wd_table <- wd_table %>%
select(sector,country,category,units,ratio_in_final_year,everything()) %>%
arrange(sector,country,category)
write.xlsx(wd_table,"blarg.xlsx")
wd_table <- wd_power %>%
filter(category %in% c("Fossil (coal)","Fossil (gas)","Wind, Solar, Hydro","Nuclear")) %>%
filter(year<=2022)
wd_table <- rbind(wd_table,wd_industry %>% filter(category %in% c("Fossil (coal)","Fossil (gas)","Fossil (oil)","Power sector")))
wd_table <- rbind(wd_table,wd_buildings %>% filter(category %in% c("Fossil (gas)","Fossil (oil)","Power sector","Bioenergy")))
wd_table <- rbind(wd_table,wd_transport %>% filter(category %in% c("Fossil (gas)","Fossil (oil)","Power sector","Bioenergy")))
wd_table <- spread(wd_table %>% ungroup() %>% select(-sector_total,-value,-iso),year,ratio)
wd_table$sector <- as.factor(wd_table$sector)
wd_table$sector <- fct_relevel(wd_table$sector,"Power","Industry","Buildings","Transport")
wd_table <- wd_table %>%
select(sector,country,category,units,everything()) %>%
arrange(sector,country,category)
View(wd_table)
write.xlsx(wd_table,"blarg.xlsx")
