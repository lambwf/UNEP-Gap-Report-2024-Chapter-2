theme(plot.background = element_rect(fill = NA, colour = '#636363', size = 0.5)))
p
p2 <-  labels %>%  ggplot(.,aes(y=position,label=subsector)) +
geom_point(aes(x=1.9,fill=subsector),
shape=22,size=3,color='white') +
geom_image(aes(x=2.35+str_length(subsector)/24.5,image=icons),by = "height",size=0.1)+
geom_text(hjust=0,aes(x=2),color='#636363',vjust=0.5) +
theme_wl() +
scale_fill_manual(values = c(labels$colour)) +
scale_x_continuous(limits=c(1.9,3.5)) +
scale_y_continuous(limits=c(0.5,9.5),expand = c(0,0)) +
theme(axis.title = element_blank(),
panel.border = element_blank(),
legend.position="none",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
plot.title.position = "plot",
plot.title = element_text(size=11,colour='#bdbdbd',hjust=1,face = "plain"),
plot.background = element_blank(),
plot.margin = unit(c(0,0,0,0),"cm"))
p <- plot_spacer() / (p1 + plot_spacer() + p2 + plot_layout(widths=c(4,0.2,2.2))) / plot_spacer() / wrap_elements(p3) + plot_layout(heights=c(0.1,6,-0.9,2))  +
plot_annotation(theme = theme_wl() +
theme(plot.background = element_rect(fill = NA, colour = '#636363', size = 0.5)))
p
p2 <-  labels %>%  ggplot(.,aes(y=position,label=subsector)) +
geom_point(aes(x=1.9,fill=subsector),
shape=22,size=3,color='white') +
geom_image(aes(x=2.5+str_length(subsector)/24.5,image=icons),by = "height",size=0.1)+
geom_text(hjust=0,aes(x=2),color='#636363',vjust=0.5) +
theme_wl() +
scale_fill_manual(values = c(labels$colour)) +
scale_x_continuous(limits=c(1.9,3.5)) +
scale_y_continuous(limits=c(0.5,9.5),expand = c(0,0)) +
theme(axis.title = element_blank(),
panel.border = element_blank(),
legend.position="none",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
plot.title.position = "plot",
plot.title = element_text(size=11,colour='#bdbdbd',hjust=1,face = "plain"),
plot.background = element_blank(),
plot.margin = unit(c(0,0,0,0),"cm"))
p <- plot_spacer() / (p1 + plot_spacer() + p2 + plot_layout(widths=c(4,0.2,2.2))) / plot_spacer() / wrap_elements(p3) + plot_layout(heights=c(0.1,6,-0.9,2))  +
plot_annotation(theme = theme_wl() +
theme(plot.background = element_rect(fill = NA, colour = '#636363', size = 0.5)))
p
p2 <-  labels %>%  ggplot(.,aes(y=position,label=subsector)) +
geom_point(aes(x=1.9,fill=subsector),
shape=22,size=3,color='white') +
geom_image(aes(x=2.48+str_length(subsector)/24,image=icons),by = "height",size=0.1)+
geom_text(hjust=0,aes(x=2),color='#636363',vjust=0.5) +
theme_wl() +
scale_fill_manual(values = c(labels$colour)) +
scale_x_continuous(limits=c(1.9,3.5)) +
scale_y_continuous(limits=c(0.5,9.5),expand = c(0,0)) +
theme(axis.title = element_blank(),
panel.border = element_blank(),
legend.position="none",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
plot.title.position = "plot",
plot.title = element_text(size=11,colour='#bdbdbd',hjust=1,face = "plain"),
plot.background = element_blank(),
plot.margin = unit(c(0,0,0,0),"cm"))
p <- plot_spacer() / (p1 + plot_spacer() + p2 + plot_layout(widths=c(4,0.2,2.2))) / plot_spacer() / wrap_elements(p3) + plot_layout(heights=c(0.1,6,-0.9,2))  +
plot_annotation(theme = theme_wl() +
theme(plot.background = element_rect(fill = NA, colour = '#636363', size = 0.5)))
p
country_iso="BRA"
annotations="yes"
plot_country <- function(country_iso,data_ghg,data_indicators,annotations) {
data_countries <- data_ghg %>%
filter(iso==country_iso) %>%
filter(year>=1990) %>%
group_by(iso,country,subsector,year) %>%
summarise(value=sum(value,na.rm=TRUE)/1e6)
labels <- read.xlsx("sources/cc_sectors.xlsx",sheet=2)
labels <- labels %>%
arrange(desc(position)) %>%
mutate(position=1) %>%
mutate(position=cumsum(position)) %>%
mutate(position_icon=str_length(subsector))
labels$subsector <- fct_reorder(labels$subsector,labels$position)
data_countries$subsector <- fct_relevel(data_countries$subsector,"AFOLU: Land use")
my_colours <- labels %>% select(subsector,colour)
my_colours$subsector <- gsub("   ","",my_colours$subsector)
my_colours <- left_join(data_countries %>%
ungroup() %>%
select(subsector) %>%
distinct() %>%
arrange(subsector),my_colours)
if (country_iso=="EU27") { name = "European Union"}
if (country_iso!="EU27") { name <- countrycode(sourcevar = country_iso,origin="iso3c","country.name")}
p1 <- data_countries %>% ggplot(aes(x=year,y=value,fill=subsector)) +
geom_area(color="#636363") +
theme_wl() +
scale_fill_manual(values = my_colours$colour) +
ylab("GHG Emissions (MtCO2e/year)") +
theme(axis.title.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.line.x=element_line(colour='#636363'),
axis.line.y=element_line(colour='#636363'),
legend.position = "none",
panel.background = element_blank(),plot.margin = unit(c(0,0,0,0.5),"cm"),
plot.title.position = "plot",
plot.subtitle=element_text(margin=margin(0,0,10,0)),
plot.tag = element_text(size=11,colour='#bdbdbd',hjust=1)) +
labs(title=name)
if (annotations=="yes") {
p1 <- p1 + labs(subtitle="Emissions trends and indicators")
}
p2 <-  labels %>%  ggplot(.,aes(y=position,label=subsector)) +
geom_point(aes(x=1.9,fill=subsector),
shape=22,size=3,color='white') +
geom_image(aes(x=2.48+str_length(subsector)/24,image=icons),by = "height",size=0.1)+
geom_text(hjust=0,aes(x=2),color='#636363',vjust=0.5) +
theme_wl() +
scale_fill_manual(values = c(labels$colour)) +
scale_x_continuous(limits=c(1.9,3.5)) +
scale_y_continuous(limits=c(0.5,9.5),expand = c(0,0)) +
theme(axis.title = element_blank(),
panel.border = element_blank(),
legend.position="none",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
plot.title.position = "plot",
plot.title = element_text(size=11,colour='#bdbdbd',hjust=1,face = "plain"),
plot.background = element_blank(),
plot.margin = unit(c(0,0,0,0),"cm"))
if (annotations=="yes") {
p2 <- p2 + labs(title="Sources: EDGAR | GCB | Grassi et al.")
}
## indicators plot
p3 <- data_indicators %>%
mutate(facet=ifelse(grepl("per_capita",var),"per_capita","totals")) %>%
ungroup() %>%
filter(iso==country_iso) %>%
#add_row(var="empty",label="",value="") %>%
ggplot(.,aes(x=1,y=label,label=value)) +
geom_text(size=10*(0.36),hjust=0,vjust=0.5,color='#636363')  +
facet_wrap(.~facet,scales="free") +
#scale_y_discrete(labels = function(x) str_wrap(x, width = 20))+
scale_x_continuous(limits=c(1,3)) +
theme_wl()+
theme(axis.title = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size=10),
plot.caption = element_text(size=11,colour='#bdbdbd',hjust=1),strip.background = element_blank(),strip.text = element_blank())
p <- plot_spacer() / (p1 + plot_spacer() + p2 + plot_layout(widths=c(4,0.2,2.2))) / plot_spacer() / wrap_elements(p3) + plot_layout(heights=c(0.1,6,-0.9,2))  +
plot_annotation(theme = theme_wl() +
theme(plot.background = element_rect(fill = NA, colour = '#636363', size = 0.5)))
p
return(p)
}
plot_country("BRA",data_ghg,data_indicators,"yes")
ggsave(plot_country("BRA",data_ghg,data_indicators,"yes"),filename = "test.png",path = "results/",device = "png",height = 4,width=8.5,dpi=300)
country_iso="BRA"
annotations="yes"
plot_country <- function(country_iso,data_ghg,data_indicators,annotations) {
data_countries <- data_ghg %>%
filter(iso==country_iso) %>%
filter(year>=1990) %>%
group_by(iso,country,subsector,year) %>%
summarise(value=sum(value,na.rm=TRUE)/1e6)
labels <- read.xlsx("sources/cc_sectors.xlsx",sheet=2)
labels <- labels %>%
arrange(desc(position)) %>%
mutate(position=1) %>%
mutate(position=cumsum(position)) %>%
mutate(position_icon=str_length(subsector))
labels$subsector <- fct_reorder(labels$subsector,labels$position)
data_countries$subsector <- fct_relevel(data_countries$subsector,"AFOLU: Land use")
my_colours <- labels %>% select(subsector,colour)
my_colours$subsector <- gsub("   ","",my_colours$subsector)
my_colours <- left_join(data_countries %>%
ungroup() %>%
select(subsector) %>%
distinct() %>%
arrange(subsector),my_colours)
if (country_iso=="EU27") { name = "European Union"}
if (country_iso!="EU27") { name <- countrycode(sourcevar = country_iso,origin="iso3c","country.name")}
p1 <- data_countries %>% ggplot(aes(x=year,y=value,fill=subsector)) +
geom_area(color="#636363") +
theme_wl() +
scale_fill_manual(values = my_colours$colour) +
ylab("GHG Emissions (MtCO2e/year)") +
theme(axis.title.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.line.x=element_line(colour='#636363'),
axis.line.y=element_line(colour='#636363'),
legend.position = "none",
panel.background = element_blank(),plot.margin = unit(c(0,0,0,0.5),"cm"),
plot.title.position = "plot",
plot.subtitle=element_text(margin=margin(0,0,10,0)),
plot.tag = element_text(size=11,colour='#bdbdbd',hjust=1)) +
labs(title=name)
if (annotations=="yes") {
p1 <- p1 + labs(subtitle="Emissions trends and indicators")
}
p2 <-  labels %>%  ggplot(.,aes(y=position,label=subsector)) +
geom_point(aes(x=1.9,fill=subsector),
shape=22,size=3,color='white') +
geom_image(aes(x=2.48+str_length(subsector)/24,image=icons),by = "height",size=0.85)+
geom_text(hjust=0,aes(x=2),color='#636363',vjust=0.5) +
theme_wl() +
scale_fill_manual(values = c(labels$colour)) +
scale_x_continuous(limits=c(1.9,3.5)) +
scale_y_continuous(limits=c(0.5,9.5),expand = c(0,0)) +
theme(axis.title = element_blank(),
panel.border = element_blank(),
legend.position="none",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
plot.title.position = "plot",
plot.title = element_text(size=11,colour='#bdbdbd',hjust=1,face = "plain"),
plot.background = element_blank(),
plot.margin = unit(c(0,0,0,0),"cm"))
if (annotations=="yes") {
p2 <- p2 + labs(title="Sources: EDGAR | GCB | Grassi et al.")
}
## indicators plot
p3 <- data_indicators %>%
mutate(facet=ifelse(grepl("per_capita",var),"per_capita","totals")) %>%
ungroup() %>%
filter(iso==country_iso) %>%
#add_row(var="empty",label="",value="") %>%
ggplot(.,aes(x=1,y=label,label=value)) +
geom_text(size=10*(0.36),hjust=0,vjust=0.5,color='#636363')  +
facet_wrap(.~facet,scales="free") +
#scale_y_discrete(labels = function(x) str_wrap(x, width = 20))+
scale_x_continuous(limits=c(1,3)) +
theme_wl()+
theme(axis.title = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size=10),
plot.caption = element_text(size=11,colour='#bdbdbd',hjust=1),strip.background = element_blank(),strip.text = element_blank())
p <- plot_spacer() / (p1 + plot_spacer() + p2 + plot_layout(widths=c(4,0.2,2.2))) / plot_spacer() / wrap_elements(p3) + plot_layout(heights=c(0.1,6,-0.9,2))  +
plot_annotation(theme = theme_wl() +
theme(plot.background = element_rect(fill = NA, colour = '#636363', size = 0.5)))
p
return(p)
}
country_iso="BRA"
annotations="yes"
plot_country <- function(country_iso,data_ghg,data_indicators,annotations) {
data_countries <- data_ghg %>%
filter(iso==country_iso) %>%
filter(year>=1990) %>%
group_by(iso,country,subsector,year) %>%
summarise(value=sum(value,na.rm=TRUE)/1e6)
labels <- read.xlsx("sources/cc_sectors.xlsx",sheet=2)
labels <- labels %>%
arrange(desc(position)) %>%
mutate(position=1) %>%
mutate(position=cumsum(position)) %>%
mutate(position_icon=str_length(subsector))
labels$subsector <- fct_reorder(labels$subsector,labels$position)
data_countries$subsector <- fct_relevel(data_countries$subsector,"AFOLU: Land use")
my_colours <- labels %>% select(subsector,colour)
my_colours$subsector <- gsub("   ","",my_colours$subsector)
my_colours <- left_join(data_countries %>%
ungroup() %>%
select(subsector) %>%
distinct() %>%
arrange(subsector),my_colours)
if (country_iso=="EU27") { name = "European Union"}
if (country_iso!="EU27") { name <- countrycode(sourcevar = country_iso,origin="iso3c","country.name")}
p1 <- data_countries %>% ggplot(aes(x=year,y=value,fill=subsector)) +
geom_area(color="#636363") +
theme_wl() +
scale_fill_manual(values = my_colours$colour) +
ylab("GHG Emissions (MtCO2e/year)") +
theme(axis.title.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.line.x=element_line(colour='#636363'),
axis.line.y=element_line(colour='#636363'),
legend.position = "none",
panel.background = element_blank(),plot.margin = unit(c(0,0,0,0.5),"cm"),
plot.title.position = "plot",
plot.subtitle=element_text(margin=margin(0,0,10,0)),
plot.tag = element_text(size=11,colour='#bdbdbd',hjust=1)) +
labs(title=name)
if (annotations=="yes") {
p1 <- p1 + labs(subtitle="Emissions trends and indicators")
}
p2 <-  labels %>%  ggplot(.,aes(y=position,label=subsector)) +
geom_point(aes(x=1.9,fill=subsector),
shape=22,size=3,color='white') +
geom_image(aes(x=2.4+str_length(subsector)/24,image=icons),by = "height",size=0.85)+
geom_text(hjust=0,aes(x=2),color='#636363',vjust=0.5) +
theme_wl() +
scale_fill_manual(values = c(labels$colour)) +
scale_x_continuous(limits=c(1.9,3.5)) +
scale_y_continuous(limits=c(0.5,9.5),expand = c(0,0)) +
theme(axis.title = element_blank(),
panel.border = element_blank(),
legend.position="none",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
plot.title.position = "plot",
plot.title = element_text(size=11,colour='#bdbdbd',hjust=1,face = "plain"),
plot.background = element_blank(),
plot.margin = unit(c(0,0,0,0),"cm"))
if (annotations=="yes") {
p2 <- p2 + labs(title="Sources: EDGAR | GCB | Grassi et al.")
}
## indicators plot
p3 <- data_indicators %>%
mutate(facet=ifelse(grepl("per_capita",var),"per_capita","totals")) %>%
ungroup() %>%
filter(iso==country_iso) %>%
#add_row(var="empty",label="",value="") %>%
ggplot(.,aes(x=1,y=label,label=value)) +
geom_text(size=10*(0.36),hjust=0,vjust=0.5,color='#636363')  +
facet_wrap(.~facet,scales="free") +
#scale_y_discrete(labels = function(x) str_wrap(x, width = 20))+
scale_x_continuous(limits=c(1,3)) +
theme_wl()+
theme(axis.title = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size=10),
plot.caption = element_text(size=11,colour='#bdbdbd',hjust=1),strip.background = element_blank(),strip.text = element_blank())
p <- plot_spacer() / (p1 + plot_spacer() + p2 + plot_layout(widths=c(4,0.2,2.2))) / plot_spacer() / wrap_elements(p3) + plot_layout(heights=c(0.1,6,-0.9,2))  +
plot_annotation(theme = theme_wl() +
theme(plot.background = element_rect(fill = NA, colour = '#636363', size = 0.5)))
p
return(p)
}
plot_country("BRA",data_ghg,data_indicators,"yes")
ggsave(plot_country("BRA",data_ghg,data_indicators,"yes"),filename = "test.png",path = "results/",device = "png",height = 4,width=8.5,dpi=300)
country_iso="BRA"
annotations="yes"
plot_country <- function(country_iso,data_ghg,data_indicators,annotations) {
data_countries <- data_ghg %>%
filter(iso==country_iso) %>%
filter(year>=1990) %>%
group_by(iso,country,subsector,year) %>%
summarise(value=sum(value,na.rm=TRUE)/1e6)
labels <- read.xlsx("sources/cc_sectors.xlsx",sheet=2)
labels <- labels %>%
arrange(desc(position)) %>%
mutate(position=1) %>%
mutate(position=cumsum(position)) %>%
mutate(position_icon=str_length(subsector))
labels$subsector <- fct_reorder(labels$subsector,labels$position)
data_countries$subsector <- fct_relevel(data_countries$subsector,"AFOLU: Land use")
my_colours <- labels %>% select(subsector,colour)
my_colours$subsector <- gsub("   ","",my_colours$subsector)
my_colours <- left_join(data_countries %>%
ungroup() %>%
select(subsector) %>%
distinct() %>%
arrange(subsector),my_colours)
if (country_iso=="EU27") { name = "European Union"}
if (country_iso!="EU27") { name <- countrycode(sourcevar = country_iso,origin="iso3c","country.name")}
p1 <- data_countries %>% ggplot(aes(x=year,y=value,fill=subsector)) +
geom_area(color="#636363") +
theme_wl() +
scale_fill_manual(values = my_colours$colour) +
ylab("GHG Emissions (MtCO2e/year)") +
theme(axis.title.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.line.x=element_line(colour='#636363'),
axis.line.y=element_line(colour='#636363'),
legend.position = "none",
panel.background = element_blank(),plot.margin = unit(c(0,0,0,0.5),"cm"),
plot.title.position = "plot",
plot.subtitle=element_text(margin=margin(0,0,10,0)),
plot.tag = element_text(size=11,colour='#bdbdbd',hjust=1)) +
labs(title=name)
if (annotations=="yes") {
p1 <- p1 + labs(subtitle="Emissions trends and indicators")
}
p2 <-  labels %>%  ggplot(.,aes(y=position,label=subsector)) +
geom_point(aes(x=1.9,fill=subsector),
shape=22,size=3,color='white') +
geom_image(aes(x=2.4+str_length(subsector)/24,image=icons),by = "height",size=0.085)+
geom_text(hjust=0,aes(x=2),color='#636363',vjust=0.5) +
theme_wl() +
scale_fill_manual(values = c(labels$colour)) +
scale_x_continuous(limits=c(1.9,3.5)) +
scale_y_continuous(limits=c(0.5,9.5),expand = c(0,0)) +
theme(axis.title = element_blank(),
panel.border = element_blank(),
legend.position="none",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
plot.title.position = "plot",
plot.title = element_text(size=11,colour='#bdbdbd',hjust=1,face = "plain"),
plot.background = element_blank(),
plot.margin = unit(c(0,0,0,0),"cm"))
if (annotations=="yes") {
p2 <- p2 + labs(title="Sources: EDGAR | GCB | Grassi et al.")
}
## indicators plot
p3 <- data_indicators %>%
mutate(facet=ifelse(grepl("per_capita",var),"per_capita","totals")) %>%
ungroup() %>%
filter(iso==country_iso) %>%
#add_row(var="empty",label="",value="") %>%
ggplot(.,aes(x=1,y=label,label=value)) +
geom_text(size=10*(0.36),hjust=0,vjust=0.5,color='#636363')  +
facet_wrap(.~facet,scales="free") +
#scale_y_discrete(labels = function(x) str_wrap(x, width = 20))+
scale_x_continuous(limits=c(1,3)) +
theme_wl()+
theme(axis.title = element_blank(),
axis.ticks = element_blank(),
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size=10),
plot.caption = element_text(size=11,colour='#bdbdbd',hjust=1),strip.background = element_blank(),strip.text = element_blank())
p <- plot_spacer() / (p1 + plot_spacer() + p2 + plot_layout(widths=c(4,0.2,2.2))) / plot_spacer() / wrap_elements(p3) + plot_layout(heights=c(0.1,6,-0.9,2))  +
plot_annotation(theme = theme_wl() +
theme(plot.background = element_rect(fill = NA, colour = '#636363', size = 0.5)))
p
return(p)
}
plot_country("BRA",data_ghg,data_indicators,"yes")
ggsave(plot_country("BRA",data_ghg,data_indicators,"yes"),filename = "test.png",path = "results/",device = "png",height = 4,width=8.5,dpi=300)
p1 <- data_countries %>% ggplot(aes(x=year,y=value,fill=subsector)) +
geom_area() +
theme_wl() +
scale_fill_manual(values = my_colours$colour) +
ylab("GHG Emissions (MtCO2e/year)") +
theme(axis.title.x = element_blank(),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
axis.line.x=element_line(colour='#636363'),
axis.line.y=element_line(colour='#636363'),
legend.position = "none",
panel.background = element_blank(),plot.margin = unit(c(0,0,0,0.5),"cm"),
plot.title.position = "plot",
plot.subtitle=element_text(margin=margin(0,0,10,0)),
plot.tag = element_text(size=11,colour='#bdbdbd',hjust=1)) +
labs(title=name)
p <- plot_spacer() / (p1 + plot_spacer() + p2 + plot_layout(widths=c(4,0.2,2.2))) / plot_spacer() / wrap_elements(p3) + plot_layout(heights=c(0.1,6,-0.9,2))  +
plot_annotation(theme = theme_wl() +
theme(plot.background = element_rect(fill = NA, colour = '#636363', size = 0.5)))
p
countries <- data_indicators %>% filter(!is.na(population)) %>% filter(!is.na(co2_consumption)) %>% select(iso) %>% distinct()
countries <- countries %>%
mutate(country=countrycode(iso,"iso3c","country.name")) %>%
mutate(country=ifelse(iso=="EU27","European Union",country))
countries <- data_indicators %>% filter(!is.na(population)) %>% filter(!is.na(co2_consumption)) %>% select(iso) %>% distinct()
countries <- countries %>%
mutate(country=countrycode(iso,"iso3c","country.name")) %>%
mutate(country=ifelse(iso=="EU27","European Union",country))
for (i in 1:length(countries$iso)) {
ggsave(plot_country(countries$iso[i],data_ghg,data_indicators),filename = paste0(countries$country[i],".png"),path = "results/countries/",device = "png",height = 4,width=8.5,dpi=300)
ggsave(plot_country(countries$iso[i],data_ghg,data_indicators),filename = paste0(countries$country[i],".pdf"),path = "results/countries/",device = "pdf",height = 4,width=8.5)
}
countries <- data_indicators %>% filter(!is.na(population)) %>% filter(!is.na(co2_consumption)) %>% select(iso) %>% distinct()
countries <- countries %>%
mutate(country=countrycode(iso,"iso3c","country.name")) %>%
mutate(country=ifelse(iso=="EU27","European Union",country))
for (i in 1:length(countries$iso)) {
ggsave(plot_country(countries$iso[i],data_ghg,data_indicators,"yes"),filename = paste0(countries$country[i],".png"),path = "results/countries/",device = "png",height = 4,width=8.5,dpi=300)
ggsave(plot_country(countries$iso[i],data_ghg,data_indicators,"yes"),filename = paste0(countries$country[i],".pdf"),path = "results/countries/",device = "pdf",height = 4,width=8.5)
}
zip(zipfile = 'countries', files = dir("results/countries/", full.names = TRUE))
files2zip <- dir('results/countries/', full.names = TRUE)
zip(zipfile = 'testZip', files = files2zip)
my_wd<-getwd() # save your current working directory path
my_wd<-getwd() # save your current working directory path
dest_path<-"C:\Users\lamw\ownCloud\Projects\UNEP Gap Report 2024\results\countries"
dest_path<-"C:/Users/lamw/ownCloud/Projects/UNEP Gap Report 2024/results/countries"
setwd(dest_path)
files<-list.files(dest_path)
named<-paste0(files,".zip")
mapply(zip,zipfile="countries.zip",files=files)
zip(zipfile = 'countries', files = dir("results/countries/", full.names = TRUE))
files2zip <- dir('results/countries/', full.names = TRUE)
zip(zipfile = 'testZip', files = files2zip)
print(zip(output, input))
install.packages('zip')
install.packages("zip")
install.packages("zip")
install.packages("zip")
install.packages("zip")
