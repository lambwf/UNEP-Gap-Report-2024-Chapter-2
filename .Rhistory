mutate(value=ifelse(value=="1","x",NA))
cc_aggregates <- spread(cc_aggregates,var,value)
data_ghg <- data_ghg %>%
arrange(iso,country,gas,year,sector_lv2)
data_countries <- data_ghg %>%
filter(iso!="AU55") %>%
filter(gas!="CO2 LULUCF") %>%
group_by(iso,country,year,gas) %>%
summarise(value=sum(value,na.rm=TRUE)) %>%
mutate(dataset="EDGARv9")
data_primap <- read.csv("sources/Guetschow_et_al_2024-PRIMAP-hist_v2.5.1_final_27-Feb-2024.csv")
data_primap <- gather(data_primap,year,value,X1750:X2022)
data_primap$year <- gsub("X","",data_primap$year)
names(data_primap) <- c("source","scenario","provenance","area","gas","unit","category","year","value")
data_primap <- data_primap %>%
filter(category=="M.0.EL") %>%
filter(scenario=="HISTCR") %>%
filter(gas %in% c("CO2","CH4","N2O","FGASES (AR6GWP100)")) %>%
mutate(year=as.numeric(year)) %>%
filter(year>=1970)
data_primap <- left_join(data_primap,gwps %>% select(gas=Species,AR6GWP100))
data_primap <- data_primap %>%
mutate(AR6GWP100=ifelse(is.na(AR6GWP100),1,AR6GWP100)) %>%
mutate(value=value*AR6GWP100) %>%
mutate(value=value*1000)
data_primap <- data_primap %>%
mutate(country=countrycode(area,"iso3c","country.name")) %>%
select(iso=area,country,year,gas,value) %>%
mutate(dataset="PRIMAP CR v2.5.1") %>%
mutate(gas=ifelse(gas=="CO2","CO2 Fossil",gas)) %>%
mutate(gas=ifelse(gas=="FGASES (AR6GWP100)","F-gases",gas))
data_countries <- rbind(data_countries,data_primap)
load(url('https://github.com/lambwf/Codebase/raw/main/data/data_crfs_2023.RData'))
data_crfs <- left_join(data_crfs,gwps %>% select(gas=Species,AR6GWP100))
data_crfs <- data_crfs %>%
mutate(value=as.numeric(value)) %>%
mutate(AR6GWP100=ifelse(is.na(AR6GWP100),1,AR6GWP100)) %>%
mutate(value=value*AR6GWP100) %>%
mutate(value=value*1000)
data_crfs <- data_crfs %>%
mutate(gas=ifelse(!gas %in% c("CO2","CO2 LULUCF","CH4","N2O"),"F-gases",gas)) %>%
group_by(across(c(-value,-AR6GWP100))) %>%
summarise(value=sum(value,na.rm=TRUE)) %>%
mutate(year=as.numeric(year)) %>%
mutate(gas=ifelse(gas=="CO2","CO2 Fossil",gas)) %>%
mutate(dataset="CRFs_2023") %>%
ungroup() %>%
select(iso,country,year,gas,value,dataset)
data_countries <- rbind(data_countries,data_crfs)
data_countries <- rbind(data_countries,
data_lulucf %>%
select(iso,country,year,gas,value) %>%
mutate(dataset="Grassi et al.") %>%
mutate(iso=ifelse(iso=="EUR","EU27",iso)) %>%
filter(year<=2021))
# data_countries <- left_join(data_countries,cc_G20 %>%
#                               add_row(iso="FRA",G20="1") %>%
#                               add_row(iso="DEU",G20="1") %>%
#                               add_row(iso="ITA",G20="1") %>%
#                               add_row(iso="ZAF",G20="1"),by="iso")
# data_countries <- data_countries %>%
#   filter(G20==1) %>%
#   select(-G20)
names <- data_countries %>%
ungroup() %>%
select(iso) %>%
distinct() %>%
arrange(iso) %>%
mutate(country=countrycode(iso,"iso3c","country.name")) %>%
mutate(country=ifelse(iso=="AIR","Intl. Aviation",country)) %>%
mutate(country=ifelse(iso=="SEA","Intl. Shipping",country)) %>%
mutate(country=ifelse(iso=="EU27","European Union",country))
data_countries <- left_join(data_countries %>% ungroup() %>% select(-country),names,by="iso") %>%
filter(!is.na(country)) %>%
select(iso,country,year,gas,dataset,value) %>%
arrange(iso,country,year,gas,dataset)
data_countries <- spread(data_countries,year,value)
addWorksheet(wb,"data_comparison")
writeData(wb, sheet = "data_comparison", data_countries, colNames = T, rowNames = F)
high_emitters <- data_ghg %>%
filter(year==2023) %>%
filter(!iso %in% c("WLD","G20","G7","AU55")) %>%
group_by(country,iso) %>%
summarise(value=sum(value,na.rm=TRUE)) %>%
ungroup() %>%
arrange(desc(value)) %>%
mutate(rank=1) %>%
mutate(rank=cumsum(rank)) %>%
head(6) %>%
select(iso,rank)
data_countries <- left_join(data_ghg,high_emitters) %>%
filter(!is.na(rank))
data_countries <- data_countries %>%
filter(year>=1990) %>%
group_by(iso,country,rank,sector_lv1,sector_lv2,sector_lv2_order,sector_lv2_colours,sector_lv2_icons,year) %>%
summarise(value=sum(value,na.rm=TRUE)/1e6)
data_countries$sector_lv2 <- fct_relevel(data_countries$sector_lv2,"AFOLU: LULUCF")
labels_colours <- data_countries %>%
filter(iso=="CHN") %>%
ungroup() %>%
filter(year==2021) %>%
arrange((sector_lv2)) %>%
mutate(position=1) %>%
mutate(position=cumsum(position))
data_countries$country = as.factor(data_countries$country)
data_countries$country <- fct_reorder(data_countries$country,data_countries$rank)
data_countries_crfs=left_join(data_crfs,high_emitters) %>%
filter(!is.na(rank)) %>%
filter(gas!="CO2 LULUCF") %>%
group_by(iso,country,rank,year) %>%
summarise(value=sum(value,na.rm=T)/1e6)
data_countries_crfs$country <- as.factor(data_countries_crfs$country)
data_countries_crfs$country <- fct_reorder(data_countries_crfs$country,data_countries_crfs$rank)
custom_scales <- data.frame(country=c("China","United States","India","European Union","Russia","Brazil"),
x=2023,y=c(15000,10000,5000,5000,5000,5000))
custom_scales$country <- as.factor(custom_scales$country)
custom_scales$country <- fct_relevel(custom_scales$country,"China","United States","India","European Union","Russia","Brazil")
p1 <- data_countries %>%
ggplot(aes(x=year,y=value,fill=sector_lv2)) +
facet_wrap(.~country,scales="free_y",ncol=2) +
geom_area(color="#636363") +
geom_path(data=data_countries_crfs,
inherit.aes=FALSE,aes(x=year,y=value,group=iso),size=1) +
geom_blank(data=custom_scales,inherit.aes=FALSE,aes(x=x,y=y)) +
theme_wl() +
scale_fill_manual(values = labels_colours$sector_lv2_colours) +
ylab("GHG Emissions (MtCO2e/year)") +
theme(axis.title.x = element_blank(),
axis.title.y = element_text(size=11),
panel.grid.major.x = element_blank(),
strip.background = element_blank(),
strip.text = element_text(hjust=0,size=11,color="#636363",face="bold"),
legend.position = "none",
panel.background = element_blank(),
panel.spacing = unit(0.5,"cm"))
labels_colours <- labels_colours %>%
arrange(desc(sector_lv2_order))
p2 <- labels_colours %>%  ggplot(.,aes(y=rev(sector_lv2_order),label=sector_lv2)) +
geom_point(aes(x=1.9,fill=as.factor(rev(sector_lv2_order))),
shape=22,size=4,color='#636363') +
geom_line(data=data.frame(x=c(1.85,1.95),y=c(0,0)),inherit.aes=FALSE,aes(x=x,y=y),color="black",size=1) +
geom_image(aes(x=2.5+ifelse(sector_lv2=="AFOLU: LULUCF",str_length(sector_lv2)+2,str_length(sector_lv2))/26,image=sector_lv2_icons),by = "height",size=0.06)+
geom_text(hjust=0,aes(x=2),color='#636363',vjust=0.5) +
geom_text(data=data.frame(label="Inventory (excl. LULUCF)"),hjust=0,inherit.aes=FALSE,aes(x=2,y=0,label=label),color='#636363',vjust=0.5) +
theme_wl() +
scale_fill_manual(values = labels_colours$sector_lv2_colours) +
scale_x_continuous(limits=c(1.8,3.5),expand = c(0,0)) +
scale_y_continuous(limits=c(-0.5,9.5),expand = c(0,0)) +
theme(axis.title = element_blank(),
panel.border = element_blank(),
legend.position="none",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
plot.title.position = "plot",
plot.title = element_text(size=11,colour='#bdbdbd',hjust=1,face = "plain"),
plot.background = element_blank(),
plot.margin = unit(c(0,0,0,0),"cm"))
p1 + (plot_spacer() / p2 / plot_spacer() + plot_layout(heights=c(2,3,2))) + plot_layout(widths=c(6,2))
blarg <- data_countries_crfs %>%
filter(iso %in% c("USA","EU27","RUS"))
blarg <- spread(blarg,year,value)
write.xlsx(blarg,"blarg.xlsx")
high_emitters <- data_ghg %>%
filter(year==2023) %>%
group_by(country,iso) %>%
summarise(value=sum(value,na.rm=TRUE)) %>%
ungroup() %>%
arrange(desc(value)) %>%
mutate(rank=1) %>%
mutate(rank=cumsum(rank)) %>%
select(iso,rank)
data_table_countries <- left_join(data_ghg,high_emitters)
data_table_countries <- data_table_countries %>%
filter(year>=1990) %>%
group_by(iso,country,rank,sector_lv1,sector_lv2,sector_lv2_order,year) %>%
summarise(value=sum(value,na.rm=TRUE)/1e6)
data_table_countries <- rbind(data_table_countries,data_table_countries %>%
filter(sector_lv2!="AFOLU: LULUCF") %>%
group_by(iso,country,rank,year) %>%
summarise(value=sum(value)) %>%
mutate(sector_lv2="Total (excl. LULUCF)") %>%
mutate(sector_lv1="Total (excl. LULUCF)") %>%
mutate(sector_lv2_order=9))
data_table_countries$sector_lv2 <- as.factor(data_table_countries$sector_lv2)
data_table_countries$sector_lv2 <- fct_reorder(data_table_countries$sector_lv2,data_table_countries$sector_lv2_order)
data_table_countries <- spread(data_table_countries,year,value) %>%
filter(!is.na(rank)) %>%
arrange(rank)
data_table_countries <- data_table_countries %>%
mutate(change_2022_2023_abs=`2023`-`2022`) %>%
mutate(change_2022_2023_rel=change_2022_2023_abs/`2022`)
pct = createStyle(numFmt="0%")
options("openxlsx.numFmt" = "0.00")
addWorksheet(wb,"total_by_country")
writeData(wb, sheet = "total_by_country", data_table_countries, colNames = T, rowNames = F)
addStyle(wb, "total_by_country",style=pct,
cols=length(data_table_countries),
rows=2:length(data_table_countries$iso),
gridExpand=TRUE)
######## calculate indicators
## Total GHG emissions
data_indicators <- data_ghg %>%
filter(year %in% c(2022,2023)) %>%
group_by(iso,country,year) %>%
summarise(value=sum(value,na.rm=TRUE)/1e6)
data_indicators <- spread(data_indicators,year,value)
data_indicators <- data_indicators %>%
rename(ghg_total_2022=`2022`) %>%
rename(ghg_total_2023=`2023`)
## Population data from the World Bank
data_wdi_pop<-WDI(country = "all",indicator = "SP.POP.TOTL",start = 1970,end = 2023,extra=TRUE,language = "en") %>%
select(iso3c, country, year, SP.POP.TOTL) %>%
filter(!is.na(iso3c))
data_wdi_pop$population <- data_wdi_pop$SP.POP.TOTL
data_wdi_pop$iso <- data_wdi_pop$iso3c
data_wdi_pop<-data_wdi_pop %>% select(-SP.POP.TOTL,-iso3c)
data_indicators <- left_join(data_indicators,data_wdi_pop %>% filter(year==2023) %>% select(iso,population),by = join_by(iso))
## Historic cumulative emissions
# Global Carbon Project CO2 FFI (https://globalcarbonbudget.org/carbonbudget2023/)
data_gcb_co2_ffi <- load_gcb_countries_ffi(read.xlsx("sources/National_Fossil_Carbon_Emissions_2023v1.0.xlsx",sheet=2,startRow = 12))
data_gcb_co2_ffi$iso[grepl("Türkiye",data_gcb_co2_ffi$country)] <- "TUR"
# Global Carbon Project CO2 LUC (https://globalcarbonbudget.org/carbonbudget2023/)
data_gcb_co2_luc <- load_gcb_countries_luc(
readxl::read_xlsx('sources/National_LandUseChange_Carbon_Emissions_2023v1.0.xlsx',range="A8:GT182",sheet=2),
readxl::read_xlsx('sources/National_LandUseChange_Carbon_Emissions_2023v1.0.xlsx',range="A8:GT182",sheet=3),
readxl::read_xlsx('sources/National_LandUseChange_Carbon_Emissions_2023v1.0.xlsx',range="A8:GT182",sheet=4)
)
data_gcb_co2_luc$iso[grepl("Türkiye",data_gcb_co2_luc$country)] <- "TUR"
data_indicators <- left_join(data_indicators,data_gcb_co2_ffi %>% group_by(iso) %>% summarise(co2_ffi_historic=sum(value,na.rm=TRUE)))
data_indicators <- left_join(data_indicators,data_gcb_co2_luc %>% group_by(iso) %>% summarise(co2_luc_historic=sum(mean,na.rm=TRUE)))
data_indicators <- data_indicators %>%
mutate(co2_historic =sum(co2_ffi_historic,co2_luc_historic,na.rm=T))
### Calculate aggregations
## EU
data_indicators_eu <- left_join(data_indicators,cc_EU,by="iso") %>%
filter(!is.na(EU)) %>%
mutate(iso=EU) %>%
select(-EU)
data_indicators_eu <- gather(data_indicators_eu,var,value,-iso,-country) %>%
group_by(iso,var) %>%
summarise(value=sum(value,na.rm=TRUE)) %>%
mutate(country="European Union") %>%
mutate(iso="EU27")
data_indicators <- rbind(data_indicators %>% filter(iso!="EU27"),spread(data_indicators_eu,var,value))
## African Union
data_indicators_au <- left_join(data_indicators,cc_AU,by="iso") %>%
filter(!is.na(AU)) %>%
mutate(iso=AU) %>%
select(-AU)
data_indicators_au <- gather(data_indicators_au,var,value,-iso,-country) %>%
group_by(iso,var) %>%
summarise(value=sum(value,na.rm=TRUE)) %>%
mutate(country="African Union") %>%
mutate(iso="AU55")
data_indicators <- rbind(data_indicators %>% filter(iso!="AU55"),spread(data_indicators_au,var,value))
## Least Developed Countries
cc_LDC <- read.xlsx("sources/cc_Least_Developed_Countries.xlsx")
data_indicators_ldc <- left_join(data_indicators,cc_LDC,by="iso") %>%
filter(!is.na(LDC)) %>%
mutate(iso="LDC") %>%
select(-LDC)
data_indicators_ldc <- gather(data_indicators_ldc,var,value,-iso,-country) %>%
group_by(iso,var) %>%
summarise(value=sum(value,na.rm=TRUE)) %>%
mutate(country="Least Developed Countries")
data_indicators <- rbind(data_indicators,spread(data_indicators_ldc,var,value))
## G20 (but without AU)
data_indicators_g20 <- left_join(data_indicators,cc_G20,by="iso") %>%
filter(!is.na(G20)) %>%
mutate(iso="G20") %>%
select(-G20)
data_indicators_g20 <- gather(data_indicators_g20,var,value,-iso,-country) %>%
group_by(iso,var) %>%
summarise(value=sum(value,na.rm=TRUE)) %>%
mutate(country="G20")
data_indicators <- rbind(data_indicators %>% filter(iso!="G20"),spread(data_indicators_g20,var,value))
#### Calculate indicators and tidy up
data_indicators <- data_indicators %>%
mutate(change_abs=ghg_total_2023-ghg_total_2022) %>%
mutate(change_rel=change_abs/ghg_total_2022) %>%
mutate(change_rel=round(change_rel*100,1)) %>%
mutate(change_rel=ifelse(change_rel>0,paste0("+",change_rel),paste0(change_rel)))
data_indicators <- data_indicators %>%
mutate(ghg_per_capita=ghg_total_2023/population*1e6) %>%
mutate(ghg_per_capita=signif(ghg_per_capita,2))
data_ghg_total <- data_ghg %>%
filter(iso=="WLD") %>%
filter(sector_lv2!="AFOLU: LULUCF") %>%
filter(year==2023) %>%
group_by(iso) %>%
summarise(value=sum(value,na.rm=TRUE))
data_indicators <- data_indicators %>%
mutate(ghg_total_2023_global = sum(data_ghg_total$value)/1e6) %>%
mutate(ghg_fraction=ghg_total_2023/ghg_total_2023_global) %>%
mutate(ghg_fraction=round(ghg_fraction*100,0)) %>%
mutate(ghg_total=signif(ghg_total_2023,3)) %>%
mutate(ghg_stat=paste0(ghg_total," (",ghg_fraction,")"))
data_historic_total <- sum(data_gcb_co2_ffi$value[data_gcb_co2_ffi$country=="World"],na.rm=TRUE) +
sum(data_gcb_co2_luc$mean[data_gcb_co2_luc$country=="Global"],na.rm=TRUE)
data_indicators <- data_indicators %>%
mutate(co2_historic_total = data_historic_total) %>%
mutate(co2_historic_fraction = co2_historic/co2_historic_total) %>%
mutate(co2_historic_fraction=round(co2_historic_fraction*100,0)) %>%
mutate(co2_historic = signif(co2_historic,3)) %>%
mutate(co2_historic_stat = paste0(co2_historic," (",co2_historic_fraction,")"))
## label indicators
data_indicators_table <- data_indicators %>%
select(iso,country,ghg_stat,change_rel,ghg_per_capita,co2_historic_stat)
data_indicators_table <- data_indicators_table %>%
set_variable_labels(ghg_stat="MtCO2e (% of total)",
change_rel="%",
ghg_per_capita="tCO2e/person",
co2_historic_stat="GtCO2 (% of total)")
data_indicators_table <- data_indicators_table %>%
rename(`Total GHG emissions in 2023`=ghg_stat) %>%
rename(`Change in total GHG emissions, 2022-2023`=change_rel) %>%
rename(`Per capita GHG emissions in 2022`=ghg_per_capita) %>%
rename(`Historic CO2 emissions, 1850-2023`=co2_historic_stat)
data_indicators_table <- data_indicators_table %>%
filter(iso %in% c("CHN","USA","IND","EU27","RUS","BRA","AU55","LDC","G20"))
data_indicators_table$iso <- as.factor(data_indicators_table$iso)
data_indicators_table$iso <- fct_relevel(data_indicators_table$iso,"CHN","USA","IND","EU27","RUS","BRA","AU55","LDC","G20")
data_indicators_table <- data_indicators_table %>%
arrange(iso)
addWorksheet(wb,"table_2")
writeData(wb, sheet = "table_2", data_indicators_table, colNames = T, rowNames = F)
addWorksheet(wb,"aggregations")
writeData(wb, sheet = "aggregations", cc_aggregates, colNames = T, rowNames = F)
saveWorkbook(wb,paste0("results/UNEP-Gap-Report-2024-Chapter-2-Data-Countries.xlsx"),overwrite=T)
#
# data_indicators <- gather_with_labels(data_indicators,c("ghg_total","change_rel","ghg_per_capita","co2_historic"))
#
# data_indicators <- data_indicators %>%
#   rename(units=label) %>%
#   mutate(label=ifelse(var=="ghg_total","Total GHG emissions in 2023:",NA)) %>%
#   mutate(label=ifelse(var=="ghg_per_capita","Per capita GHG emissions in 2022:",label)) %>%
#   mutate(label=ifelse(var=="change_rel","Change in total GHG emissions 2022-2023:",label)) %>%
#   mutate(label=ifelse(var=="co2_historic","Historic CO2 emissions 1850-2023:",label))
#
# data_indicators <- data_indicators %>%
#   mutate(value=ifelse(var=="ghg_total",signif(value,3),value)) %>%
#   mutate(value=ifelse(var=="ghg_per_capita",signif(value,3),value)) %>%
#   mutate(value=ifelse(var=="co2_cons_per_capita",signif(value,3),value)) %>%
#   mutate(value=ifelse(var=="co2_historic",signif(value,3),value))
#
# data_indicators <- data_indicators %>%
#   mutate(value=paste0(value," ",units))
#
cc_G20
data_share <- data_indicators %>%
filter(iso %in% c("AUS","ARG","BRA","CAN","CHN","EU27","IND","IDN","JPN","MEX","RUS","SAU","KOR","TUR","GBR","USA","AU55")) %>%
group_by(year) %>%
summarise(value=sum(value))
View(data_indicators)
## share of G20 incl. AU55 in global emissions
data_share <- data_ghg %>%
filter(iso %in% c("AUS","ARG","BRA","CAN","CHN","EU27","IND","IDN","JPN","MEX","RUS","SAU","KOR","TUR","GBR","USA","AU55")) %>%
group_by(year) %>%
summarise(value=sum(value))
View(data_share)
data_share <- left_join(data_share,data_ghg %>% filter(iso=="WLD") %>% group_by(year) %>% summarise(value_world=sum(value)))
data_share <- data_share %>%
mutate(fraction=value/value_world)
## share of G20 incl. AU55 in global emissions
data_share <- data_ghg %>%
filter(iso %in% c("AUS","ARG","BRA","CAN","CHN","EU27","IND","IDN","JPN","MEX","RUS","SAU","KOR","TUR","GBR","USA")) %>%
group_by(year) %>%
summarise(value=sum(value))
data_share <- left_join(data_share,data_ghg %>% filter(iso=="WLD") %>% group_by(year) %>% summarise(value_world=sum(value)))
data_share <- data_share %>%
mutate(fraction=value/value_world)
## share of G20 incl. AU55 in global emissions
data_share <- data_ghg %>%
filter(iso %in% c("AUS","ARG","BRA","CAN","CHN","EU27","IND","IDN","JPN","MEX","RUS","SAU","KOR","TUR","GBR","USA","ZAF")) %>%
group_by(year) %>%
summarise(value=sum(value))
data_share <- left_join(data_share,data_ghg %>% filter(iso=="WLD") %>% group_by(year) %>% summarise(value_world=sum(value)))
data_share <- data_share %>%
mutate(fraction=value/value_world)
knitr::opts_chunk$set(echo = FALSE)
rm(list = ls())
library(tidyverse)
library(openxlsx)
library(countrycode)
library(ggrepel)
library(patchwork)
library(zoo)
library(RColorBrewer)
library(WDI)
library(labelled)
library(grid)
library(ggimage)
source("https://raw.githubusercontent.com/lambwf/Codebase/main/figure_style.R")
source("https://raw.githubusercontent.com/lambwf/Codebase/main/reshape_with_labels.R")
source("https://raw.githubusercontent.com/lambwf/Codebase/main/locate_shares.R")
source("https://raw.githubusercontent.com/lambwf/Codebase/main/load_gcb_countries_v2023.R")
source("https://raw.githubusercontent.com/lambwf/Codebase/main/load_edgar_v9.R")
#### Load and organise EDGAR data
# Load EDGAR data (https://edgar.jrc.ec.europa.eu/dataset_ghg80)
edgar_co2  <- read.xlsx("sources/not public/EDGAR_2024_CO2_1970_2023_v2.xlsx",sheet=2,startRow=9)
edgar_ch4  <- read.xlsx("sources/not public/EDGAR_2024_CH4_1970_2023_v2.xlsx",sheet=2,startRow = 9)
edgar_n2o  <- read.xlsx("sources/not public/EDGAR_2024_N2O_1970_2023_v2.xlsx",sheet=2,startRow = 9)
edgar_fgas <- read.xlsx("sources/not public/EDGAR_2024_F-gases_1970_2023_v2.xlsx",sheet=2,startRow = 9)
data_ghg   <- load_edgar(edgar_co2,edgar_ch4,edgar_n2o,edgar_fgas)
# Remove biogenic CO2 as these emissions are normally accounted in equilibrium with removals
data_ghg <- data_ghg %>% filter(gas!="CO2bio")
# Load global warming potentials (GWPs) to calculate CO2e for each gas
gwps <- read.csv("https://raw.githubusercontent.com/openclimatedata/globalwarmingpotentials/main/globalwarmingpotentials.csv",skip = 10)
gwps <- gwps %>% select(gas=Species,gwp100=AR6GWP100)
# Join GWPs
data_ghg$gas <- gsub("-","",data_ghg$gas)
data_ghg <- left_join(data_ghg,gwps) %>%
mutate(gwp100=ifelse(gas=="CO2",1,gwp100))
# Check that all gwps joined
check <- data_ghg %>% filter(is.na(gwp100))
check <- data_ghg %>% select(gas,gwp100) %>% distinct()
# Calculate CO2e for each gas
data_ghg <- data_ghg %>% mutate(value_gwp=value*gwp100)
# Create list of individual f-gases to merge these into a single gas variable
list_fgases <- data_ghg %>%
select(gas) %>%
distinct() %>%
mutate(group=ifelse(gas=="CO2","CO2 Fossil",NA)) %>%
mutate(group=ifelse(gas=="CH4","CH4",group)) %>%
mutate(group=ifelse(gas=="N2O","N2O",group)) %>%
mutate(group=ifelse(is.na(group),"F-gases",group))
# Group f-gases into a single variable
data_ghg <- left_join(data_ghg,list_fgases,by="gas")
data_ghg <- data_ghg %>%
mutate(gas=group) %>%
group_by(iso,country,code,code_description,gas,year) %>%
summarise(value=sum(value_gwp,na.rm=TRUE))
# Convert Gg to tons
data_ghg$value = data_ghg$value*1000
#### Join additional global data
# Load Global Carbon Budget (GCB) CO2 land use change (LUC) emissions (https://globalcarbonbudget.org/carbonbudget2023/)
data_gcb_co2_luc <- load_gcb_countries_luc(
readxl::read_xlsx('sources/National_LandUseChange_Carbon_Emissions_2023v1.0.xlsx',range="A8:GT182",sheet=2),
readxl::read_xlsx('sources/National_LandUseChange_Carbon_Emissions_2023v1.0.xlsx',range="A8:GT182",sheet=3),
readxl::read_xlsx('sources/National_LandUseChange_Carbon_Emissions_2023v1.0.xlsx',range="A8:GT182",sheet=4))
data_gcb_co2_luc <- data_gcb_co2_luc %>%
filter(year>=1970) %>%
filter(country=="Global") %>%
select(year,value=mean) %>%
mutate(year=as.numeric(year)) %>%
mutate(value=value*1e9)
# Add the GCB projection for 2023 (https://essd.copernicus.org/articles/15/5301/2023/) and join
data_gcb_co2_luc <- data_gcb_co2_luc %>%
add_row(year=2023,value=1.1*(44/12)*1e9)
data_gcb_co2_luc <- data_gcb_co2_luc %>%
mutate(code="3B") %>%
mutate(code_description="Land use change") %>%
mutate(gas="CO2 LULUCF")
#data_ghg <- rbind(data_ghg,data_gcb_co2_luc)
#### Aggregate sectors and set factor levels
# Aggregate sectors based on own excel file
data_ghg <- left_join(data_ghg,read.xlsx("sources/cc_sectors.xlsx"),by=join_by(code, code_description))
# Set factor order based on own excel file
data_ghg$gas <- as.factor(data_ghg$gas)
data_ghg$gas <- fct_relevel(data_ghg$gas,"CO2 Fossil","CO2 LULUCF","CH4","N2O","F-gases")
data_ghg$sector_lv1 <- as.factor(data_ghg$sector_lv1)
data_ghg$sector_lv1 <- fct_reorder(data_ghg$sector_lv1,data_ghg$sector_lv1_order)
data_ghg$sector_lv2 <- as.factor(data_ghg$sector_lv2)
data_ghg$sector_lv2 <- fct_reorder(data_ghg$sector_lv2,data_ghg$sector_lv2_order)
data_ghg$sector_lv3 <- as.factor(data_ghg$sector_lv3)
data_ghg$sector_lv3 <- fct_reorder(data_ghg$sector_lv3,data_ghg$sector_lv3_order)
# merge EU
cc_EU <- read.csv("https://raw.githubusercontent.com/openclimatedata/countrygroups/main/data/european-union.csv") %>%
select(iso=Code) %>%
mutate(EU="1")
data_ghg <- left_join(data_ghg,cc_EU)
data_ghg <- rbind(data_ghg %>% filter(is.na(EU)) %>% select(-EU),data_ghg %>%
filter(EU==1) %>%
mutate(country="European Union") %>%
mutate(iso="EU27") %>%
select(-EU) %>%
group_by(across(c(-value))) %>%
summarise(value=sum(value,na.rm=TRUE)))
ggplot(country_change, aes(fill = sector_lv2)) +
geom_rect(aes(x = country,
xmin = include_country - 0.25, # control bar gap width
xmax = include_country + 0.25,
ymin = end,
ymax = start),
color="#636363"
) +
geom_segment(aes(x=ifelse(include_country == last(include_country),last(include_country),include_country+0.25),
xend=ifelse(include_country == last(include_country),last(include_country),include_country+0.75),
y=ifelse(sector_lv2 == "Waste & Other",
end,
# these will be removed once we set the y limits
max(end)*2),
yend=ifelse(sector_lv2 == "Waste & Other",
end,
# these will be removed once we set the y limits
max(end)*2)),
colour="#636363") +
geom_text(data=country_change %>% filter(sector_lv2 %in% c("Waste & Other","Total")),
aes(x=country,y=ifelse(grepl("\\+",group_change),end+100,end+100-as.numeric(group_change)),label=group_change),
color="#636363",
size=4) +
scale_x_discrete(labels = function(x) str_wrap(x, width = 12)) +
coord_cartesian(ylim=c(56000,58000)) +
scale_fill_manual(values=colours$sector_lv2_colours) +
#ylab(bquote("Greenhouse gas emissions (Mt" ~CO[2]* "eq/yr)")) +
theme_wl() +
theme(axis.title = element_blank(),
legend.title = element_blank(),
axis.text.x = element_text(vjust=1,hjust=1,angle = 45)) +
labs(title="Change in total greenhouse gas emissions, 2022-2023",subtitle=bquote("Mt" ~CO[2]* "eq/yr"),caption="Data sources: EDGAR v9 (Crippa et al. 2024); GCB 2023 (Friedlingstein et al. 2023)")
