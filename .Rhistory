mutate()
# Calculate the share of total for each sector at the second level
plot_sector_shares_2 <- plot_sector_shares_2 %>%
mutate(total=sum(plot_sector_shares_2$value)) %>%
mutate(share=value/total) %>%
mutate(share=round(share*100))
# Calculate the position of each label
plot_sector_shares_2 <- plot_sector_shares_2 %>%
arrange(desc(sector_lv3)) %>%
mutate(label_position=value) %>%
mutate(label_position=cumsum(label_position)) %>%
mutate(label_position=label_position-(value/2)) %>%
mutate(label=paste0(sector_lv3," (",share,"%)"))
# Plot figure at the second level
p3 <- plot_sector_shares_2 %>%
ggplot(.,aes(x=1,y=value,fill=sector_lv2)) +
geom_col(color="#636363") +
geom_text_repel(data=plot_sector_shares_2 %>% filter(!sector_lv2 %in% c("Energy: Power","Energy: Industry","Energy: Buildings")),
aes(x=1.6,y=label_position,label=label),
nudge_x      = 0.25,
direction    = "y",
hjust        = 0,
segment.size = 0.2,
point.size = NA,
size=3.5,
ylim = c(-3,60)
) +
xlim(0,8) +
ylim(0,60) +
scale_fill_manual(values = rev(plot_sector_shares_1$sector_lv2_colours)) +
theme_wl() +
theme(legend.position="none",
axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
plot.background = element_blank(),
plot.margin = unit(c(0,0,0,0),"cm"))
# Join figure
p2 + plot_spacer() + p3  + plot_layout(widths=c(2.2,-1.2,4)) +
plot_annotation(title="Total greenhouse gas emissions by sector in 2023",
subtitle=bquote("Gt" ~CO[2]~ "/year"),
theme=theme(plot.title=element_text(hjust=0.25,size=14,face="bold",color = '#636363'),
plot.subtitle = element_text(hjust=0.25,size=12,color = '#636363')))
# Save figure data for designers
# data_table_sector_share <- rbind(plot_sector_shares_1 %>%
#                  arrange(sector_lv2) %>%
#                  mutate(column=1) %>%
#                  select(column,sector=sector_lv2,value,share,label),
#                plot_sector_shares_2 %>%
#                  arrange(sector_lv3) %>%
#                  mutate(column=2) %>%
#                  select(column,sector=sector_lv3,value,share,label))
# data_table_sector_share <- data_table_sector_share %>%
#   select(column,label,value,share)
#
#
# addWorksheet(wb,"shares_by_sector")
# writeData(wb, sheet = "shares_by_sector", data_table_sector_share, colNames = T, rowNames = F)
p2 + plot_spacer() + p3  + plot_layout(widths=c(2.2,-1.2,4)) +
plot_annotation(title="Total greenhouse gas emissions by sector in 2023",
subtitle=bquote("Gt" ~CO[2]~ "/year"),
theme=theme(plot.title=element_text(hjust=0.25,size=14,face="bold",color = '#636363'),
plot.subtitle = element_text(hjust=0.20,size=12,color = '#636363')))
p2 + plot_spacer() + p3  + plot_layout(widths=c(2.2,-1.2,4)) +
plot_annotation(title="Total greenhouse gas emissions by sector in 2023",
subtitle=bquote("Gt" ~CO[2]~ "/year"),
theme=theme(plot.title=element_text(hjust=0.25,size=14,face="bold",color = '#636363'),
plot.subtitle = element_text(hjust=0.15,size=12,color = '#636363')))
p2 + plot_spacer() + p3  + plot_layout(widths=c(2.2,-1.2,4)) +
plot_annotation(title="Total greenhouse gas emissions by sector in 2023",
subtitle=bquote("Gt" ~CO[2]~ "/year"),
theme=theme(plot.title=element_text(hjust=0.25,size=14,face="bold",color = '#636363'),
plot.subtitle = element_text(hjust=0.125,size=12,color = '#636363')))
p2 + plot_spacer() + p3  + plot_layout(widths=c(2.2,-1.2,4)) +
plot_annotation(title="Total greenhouse gas emissions by sector in 2023",
subtitle=bquote("Gt" ~CO[2]~ "/year"),
theme=theme(plot.title=element_text(hjust=0.25,size=14,face="bold",color = '#636363'),
plot.subtitle = element_text(hjust=0.13,size=12,color = '#636363')))
# Calculate emissions by sector (first level) in 2023
plot_sector_shares_1 <- data_ghg %>%
filter(year==2023) %>%
group_by(sector_lv2,sector_lv2_colours,sector_lv2_icons) %>%
summarise(value=sum(value,na.rm=TRUE)/1e9) %>%
ungroup()
# Calculate the share of total for each sector at the first level
plot_sector_shares_1 <- plot_sector_shares_1 %>%
mutate(total=sum(plot_sector_shares_1$value)) %>%
mutate(share=value/total) %>%
mutate(share=round(share*100))
# Calculate the position of each label
plot_sector_shares_1 <- plot_sector_shares_1 %>%
arrange(desc(sector_lv2)) %>%
mutate(label_position=value) %>%
mutate(label_position=cumsum(label_position)) %>%
mutate(label_position=label_position-(value/2)) %>%
mutate(label=paste0(sector_lv2,"\n (",share,"%)"))
# Plot figure at the first level
p2 <- plot_sector_shares_1 %>%
ggplot(.,aes(x=1.6,y=value,fill=sector_lv2)) +
geom_col(color="#636363",width=0.5) +
geom_text(aes(x=1.3,y=label_position,label=label),size=3.5,hjust=1) +
geom_image(aes(x=1.6,y=label_position,image=sector_lv2_icons),by = "height",size=0.03) +
# geom_text(data=plot_sector_shares_1 %>% filter(sector_lv2=="Energy: Power"),
#           aes(x=1.6,y=59.5,label=paste0(signif(total,3)," GtCO2e in 2023"))) +
xlim(0,3) +
ylim(0,60) +
scale_fill_manual(values = rev(plot_sector_shares_1$sector_lv2_colours)) +
theme_wl() +
theme(legend.position="none",
axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
plot.background = element_blank(),
plot.margin = unit(c(0,0,0,0),"cm"))
# Calculate emissions by sector (second level) in 2023
plot_sector_shares_2 <- data_ghg %>%
filter(year==2023) %>%
group_by(sector_lv2,sector_lv2_colours,sector_lv3) %>%
summarise(value=sum(value,na.rm=TRUE)/1e9) %>%
ungroup() %>%
mutate()
# Calculate the share of total for each sector at the second level
plot_sector_shares_2 <- plot_sector_shares_2 %>%
mutate(total=sum(plot_sector_shares_2$value)) %>%
mutate(share=value/total) %>%
mutate(share=round(share*100))
# Calculate the position of each label
plot_sector_shares_2 <- plot_sector_shares_2 %>%
arrange(desc(sector_lv3)) %>%
mutate(label_position=value) %>%
mutate(label_position=cumsum(label_position)) %>%
mutate(label_position=label_position-(value/2)) %>%
mutate(label=paste0(sector_lv3," (",share,"%)"))
# Plot figure at the second level
p3 <- plot_sector_shares_2 %>%
ggplot(.,aes(x=1,y=value,fill=sector_lv2)) +
geom_col(color="#636363") +
geom_text_repel(data=plot_sector_shares_2 %>% filter(!sector_lv2 %in% c("Energy: Power","Energy: Industry","Energy: Buildings")),
aes(x=1.6,y=label_position,label=label),
nudge_x      = 0.25,
direction    = "y",
hjust        = 0,
segment.size = 0.2,
point.size = NA,
size=3.5,
ylim = c(-3,60)
) +
xlim(0,8) +
ylim(0,60) +
scale_fill_manual(values = rev(plot_sector_shares_1$sector_lv2_colours)) +
theme_wl() +
theme(legend.position="none",
axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
plot.background = element_blank(),
plot.margin = unit(c(0,0,0,0),"cm"))
# Join figure
p2 + plot_spacer() + p3  + plot_layout(widths=c(2.2,-1.2,4)) +
plot_annotation(title="Total greenhouse gas emissions by sector",
subtitle=bquote("57.1 Gt" ~CO[2]~ "in 2023"),
theme=theme(plot.title=element_text(hjust=0.25,size=14,face="bold",color = '#636363'),
plot.subtitle = element_text(hjust=0.13,size=12,color = '#636363')))
# Save figure data for designers
# data_table_sector_share <- rbind(plot_sector_shares_1 %>%
#                  arrange(sector_lv2) %>%
#                  mutate(column=1) %>%
#                  select(column,sector=sector_lv2,value,share,label),
#                plot_sector_shares_2 %>%
#                  arrange(sector_lv3) %>%
#                  mutate(column=2) %>%
#                  select(column,sector=sector_lv3,value,share,label))
# data_table_sector_share <- data_table_sector_share %>%
#   select(column,label,value,share)
#
#
# addWorksheet(wb,"shares_by_sector")
# writeData(wb, sheet = "shares_by_sector", data_table_sector_share, colNames = T, rowNames = F)
p2 + plot_spacer() + p3  + plot_layout(widths=c(2.2,-1.2,4)) +
plot_annotation(title="Total greenhouse gas emissions by sector",
subtitle=bquote("57.1 Gt" ~CO[2]~ "in 2023"),
theme=theme(plot.title=element_text(hjust=0.25,size=14,face="bold",color = '#636363'),
plot.subtitle = element_text(hjust=0.2,size=12,color = '#636363')))
p2 + plot_spacer() + p3  + plot_layout(widths=c(2.2,-1.2,4)) +
plot_annotation(title="Total greenhouse gas emissions by sector",
subtitle=bquote("57.1 Gt" ~CO[2]~ "in 2023"),
theme=theme(plot.title=element_text(hjust=0.25,size=14,face="bold",color = '#636363'),
plot.subtitle = element_text(hjust=0.18,size=12,color = '#636363')))
p2 + plot_spacer() + p3  + plot_layout(widths=c(2.2,-1.2,4)) +
plot_annotation(title="Total greenhouse gas emissions by sector",
subtitle=bquote("57.1 Gt" ~CO[2]~ "in 2023"),
theme=theme(plot.title=element_text(hjust=0.25,size=14,face="bold",color = '#636363'),
plot.subtitle = element_text(hjust=0.16,size=12,color = '#636363')))
plot_spacer()/ (p2 + plot_spacer() + p3  + plot_layout(widths=c(2.2,-1.2,4))) + plot_layout(heights=c(-1,10)) +
plot_annotation(title="Total greenhouse gas emissions by sector",
subtitle=bquote("57.1 Gt" ~CO[2]~ "in 2023"),
theme=theme(plot.title=element_text(hjust=0.25,size=14,face="bold",color = '#636363'),
plot.subtitle = element_text(hjust=0.16,size=12,color = '#636363')))
plot_spacer()/ (p2 + plot_spacer() + p3  + plot_layout(widths=c(2.2,-1.2,4))) + plot_layout(heights=c(-5,10)) +
plot_annotation(title="Total greenhouse gas emissions by sector",
subtitle=bquote("57.1 Gt" ~CO[2]~ "in 2023"),
theme=theme(plot.title=element_text(hjust=0.25,size=14,face="bold",color = '#636363'),
plot.subtitle = element_text(hjust=0.16,size=12,color = '#636363')))
plot_spacer()/ (p2 + plot_spacer() + p3  + plot_layout(widths=c(2.2,-1.2,4))) + plot_layout(heights=c(-2,10)) +
plot_annotation(title="Total greenhouse gas emissions by sector",
subtitle=bquote("57.1 Gt" ~CO[2]~ "in 2023"),
theme=theme(plot.title=element_text(hjust=0.25,size=14,face="bold",color = '#636363'),
plot.subtitle = element_text(hjust=0.16,size=12,color = '#636363')))
plot_spacer()/ (p2 + plot_spacer() + p3  + plot_layout(widths=c(2.2,-1.2,4))) + plot_layout(heights=c(-1.1,10)) +
plot_annotation(title="Total greenhouse gas emissions by sector",
subtitle=bquote("57.1 Gt" ~CO[2]~ "in 2023"),
theme=theme(plot.title=element_text(hjust=0.25,size=14,face="bold",color = '#636363'),
plot.subtitle = element_text(hjust=0.16,size=12,color = '#636363')))
View(plot_sector_shares_1)
p2 <- plot_sector_shares_1 %>%
ggplot(.,aes(x=1.6,y=value,fill=sector_lv2)) +
geom_col(color="#636363",width=0.5) +
geom_text(aes(x=1.3,y=ifelse(sector_lv2=="Waste & Other",label_position-1,label_position),label=label),size=3.5,hjust=1) +
geom_image(aes(x=1.6,y=label_position,image=sector_lv2_icons),by = "height",size=0.03) +
# geom_text(data=plot_sector_shares_1 %>% filter(sector_lv2=="Energy: Power"),
#           aes(x=1.6,y=59.5,label=paste0(signif(total,3)," GtCO2e in 2023"))) +
xlim(0,3) +
ylim(0,60) +
scale_fill_manual(values = rev(plot_sector_shares_1$sector_lv2_colours)) +
theme_wl() +
theme(legend.position="none",
axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
plot.background = element_blank(),
plot.margin = unit(c(0,0,0,0),"cm"))
# Calculate emissions by sector (first level) in 2023
plot_sector_shares_1 <- data_ghg %>%
filter(year==2023) %>%
group_by(sector_lv2,sector_lv2_colours,sector_lv2_icons) %>%
summarise(value=sum(value,na.rm=TRUE)/1e9) %>%
ungroup()
# Calculate the share of total for each sector at the first level
plot_sector_shares_1 <- plot_sector_shares_1 %>%
mutate(total=sum(plot_sector_shares_1$value)) %>%
mutate(share=value/total) %>%
mutate(share=round(share*100))
# Calculate the position of each label
plot_sector_shares_1 <- plot_sector_shares_1 %>%
arrange(desc(sector_lv2)) %>%
mutate(label_position=value) %>%
mutate(label_position=cumsum(label_position)) %>%
mutate(label_position=label_position-(value/2)) %>%
mutate(label=paste0(sector_lv2,"\n (",share,"%)"))
# Plot figure at the first level
p2 <- plot_sector_shares_1 %>%
ggplot(.,aes(x=1.6,y=value,fill=sector_lv2)) +
geom_col(color="#636363",width=0.5) +
geom_text(aes(x=1.3,y=ifelse(sector_lv2=="Waste & Other",label_position-1,label_position),label=label),size=3.5,hjust=1) +
geom_image(aes(x=1.6,y=label_position,image=sector_lv2_icons),by = "height",size=0.03) +
# geom_text(data=plot_sector_shares_1 %>% filter(sector_lv2=="Energy: Power"),
#           aes(x=1.6,y=59.5,label=paste0(signif(total,3)," GtCO2e in 2023"))) +
xlim(0,3) +
ylim(0,60) +
scale_fill_manual(values = rev(plot_sector_shares_1$sector_lv2_colours)) +
theme_wl() +
theme(legend.position="none",
axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
plot.background = element_blank(),
plot.margin = unit(c(0,0,0,0),"cm"))
# Calculate emissions by sector (second level) in 2023
plot_sector_shares_2 <- data_ghg %>%
filter(year==2023) %>%
group_by(sector_lv2,sector_lv2_colours,sector_lv3) %>%
summarise(value=sum(value,na.rm=TRUE)/1e9) %>%
ungroup() %>%
mutate()
# Calculate the share of total for each sector at the second level
plot_sector_shares_2 <- plot_sector_shares_2 %>%
mutate(total=sum(plot_sector_shares_2$value)) %>%
mutate(share=value/total) %>%
mutate(share=round(share*100))
# Calculate the position of each label
plot_sector_shares_2 <- plot_sector_shares_2 %>%
arrange(desc(sector_lv3)) %>%
mutate(label_position=value) %>%
mutate(label_position=cumsum(label_position)) %>%
mutate(label_position=label_position-(value/2)) %>%
mutate(label=paste0(sector_lv3," (",share,"%)"))
# Plot figure at the second level
p3 <- plot_sector_shares_2 %>%
ggplot(.,aes(x=1,y=value,fill=sector_lv2)) +
geom_col(color="#636363") +
geom_text_repel(data=plot_sector_shares_2 %>% filter(!sector_lv2 %in% c("Energy: Power","Energy: Industry","Energy: Buildings")),
aes(x=1.6,y=label_position,label=label),
nudge_x      = 0.25,
direction    = "y",
hjust        = 0,
segment.size = 0.2,
point.size = NA,
size=3.5,
ylim = c(-3,60)
) +
xlim(0,8) +
ylim(0,60) +
scale_fill_manual(values = rev(plot_sector_shares_1$sector_lv2_colours)) +
theme_wl() +
theme(legend.position="none",
axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
plot.background = element_blank(),
plot.margin = unit(c(0,0,0,0),"cm"))
# Join figure
plot_spacer()/ (p2 + plot_spacer() + p3  + plot_layout(widths=c(2.2,-1.2,4))) + plot_layout(heights=c(-1.1,10)) +
plot_annotation(title="Total greenhouse gas emissions by sector",
subtitle=bquote("57.1 Gt" ~CO[2]~ "in 2023"),
theme=theme(plot.title=element_text(hjust=0.25,size=14,face="bold",color = '#636363'),
plot.subtitle = element_text(hjust=0.16,size=12,color = '#636363')))
# Save figure data for designers
# data_table_sector_share <- rbind(plot_sector_shares_1 %>%
#                  arrange(sector_lv2) %>%
#                  mutate(column=1) %>%
#                  select(column,sector=sector_lv2,value,share,label),
#                plot_sector_shares_2 %>%
#                  arrange(sector_lv3) %>%
#                  mutate(column=2) %>%
#                  select(column,sector=sector_lv3,value,share,label))
# data_table_sector_share <- data_table_sector_share %>%
#   select(column,label,value,share)
#
#
# addWorksheet(wb,"shares_by_sector")
# writeData(wb, sheet = "shares_by_sector", data_table_sector_share, colNames = T, rowNames = F)
# Calculate emissions by sector (first level) in 2023
plot_sector_shares_1 <- data_ghg %>%
filter(year==2023) %>%
group_by(sector_lv2,sector_lv2_colours,sector_lv2_icons) %>%
summarise(value=sum(value,na.rm=TRUE)/1e9) %>%
ungroup()
# Calculate the share of total for each sector at the first level
plot_sector_shares_1 <- plot_sector_shares_1 %>%
mutate(total=sum(plot_sector_shares_1$value)) %>%
mutate(share=value/total) %>%
mutate(share=round(share*100))
# Calculate the position of each label
plot_sector_shares_1 <- plot_sector_shares_1 %>%
arrange(desc(sector_lv2)) %>%
mutate(label_position=value) %>%
mutate(label_position=cumsum(label_position)) %>%
mutate(label_position=label_position-(value/2)) %>%
mutate(label=paste0(sector_lv2,"\n (",share,"%)"))
# Plot figure at the first level
p2 <- plot_sector_shares_1 %>%
ggplot(.,aes(x=1.6,y=value,fill=sector_lv2)) +
geom_col(color="#636363",width=0.5) +
geom_text(aes(x=1.3,y=ifelse(sector_lv2=="Waste & Other",label_position-1,label_position),label=label),size=3.5,hjust=1) +
geom_image(aes(x=1.6,y=label_position,image=sector_lv2_icons),by = "height",size=0.03) +
# geom_text(data=plot_sector_shares_1 %>% filter(sector_lv2=="Energy: Power"),
#           aes(x=1.6,y=59.5,label=paste0(signif(total,3)," GtCO2e in 2023"))) +
xlim(0,3) +
ylim(0,60) +
scale_fill_manual(values = rev(plot_sector_shares_1$sector_lv2_colours)) +
theme_wl() +
theme(legend.position="none",
axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
plot.background = element_blank(),
plot.margin = unit(c(0,0,0,0),"cm"))
# Calculate emissions by sector (second level) in 2023
plot_sector_shares_2 <- data_ghg %>%
filter(year==2023) %>%
group_by(sector_lv2,sector_lv2_colours,sector_lv3) %>%
summarise(value=sum(value,na.rm=TRUE)/1e9) %>%
ungroup() %>%
mutate()
# Calculate the share of total for each sector at the second level
plot_sector_shares_2 <- plot_sector_shares_2 %>%
mutate(total=sum(plot_sector_shares_2$value)) %>%
mutate(share=value/total) %>%
mutate(share=round(share*100))
# Calculate the position of each label
plot_sector_shares_2 <- plot_sector_shares_2 %>%
arrange(desc(sector_lv3)) %>%
mutate(label_position=value) %>%
mutate(label_position=cumsum(label_position)) %>%
mutate(label_position=label_position-(value/2)) %>%
mutate(label=paste0(sector_lv3," (",share,"%)"))
# Plot figure at the second level
p3 <- plot_sector_shares_2 %>%
ggplot(.,aes(x=1,y=value,fill=sector_lv2)) +
geom_col(color="#636363") +
geom_text_repel(data=plot_sector_shares_2 %>% filter(!sector_lv2 %in% c("Energy: Power","Energy: Industry","Energy: Buildings")),
aes(x=1.6,y=label_position,label=label),
nudge_x      = 0.25,
direction    = "y",
hjust        = 0,
segment.size = 0.2,
point.size = NA,
size=3.5,
ylim = c(-3,60)
) +
xlim(0,8) +
ylim(0,60) +
scale_fill_manual(values = rev(plot_sector_shares_1$sector_lv2_colours)) +
theme_wl() +
theme(legend.position="none",
axis.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
plot.background = element_blank(),
plot.margin = unit(c(0,0,0,0),"cm"))
# Join figure
plot_spacer()/ (p2 + plot_spacer() + p3  + plot_layout(widths=c(2.2,-1.2,4))) + plot_layout(heights=c(-1.1,10)) +
plot_annotation(title="Total greenhouse gas emissions by sector",
subtitle=bquote("57.1 Gt" ~CO[2]~ "in 2023"),
caption=str_wrap("Non-CO2 greenhouse gases are converted to CO2 equivalents using global warming potentials with a 100-year time horizon from the IPCC AR6 WGI (Forster et al., 2021). Sources: Crippa et al. (2024), Friedlingstein et al. (2023).",125),
theme=theme(plot.title=element_text(hjust=0.25,size=14,face="bold",color = '#636363'),
plot.subtitle = element_text(hjust=0.18,size=12,color = '#636363')))
# Save figure data for designers
# data_table_sector_share <- rbind(plot_sector_shares_1 %>%
#                  arrange(sector_lv2) %>%
#                  mutate(column=1) %>%
#                  select(column,sector=sector_lv2,value,share,label),
#                plot_sector_shares_2 %>%
#                  arrange(sector_lv3) %>%
#                  mutate(column=2) %>%
#                  select(column,sector=sector_lv3,value,share,label))
# data_table_sector_share <- data_table_sector_share %>%
#   select(column,label,value,share)
#
#
# addWorksheet(wb,"shares_by_sector")
# writeData(wb, sheet = "shares_by_sector", data_table_sector_share, colNames = T, rowNames = F)
plot_spacer()/ (p2 + plot_spacer() + p3  + plot_layout(widths=c(2.2,-1.2,4))) + plot_layout(heights=c(-1.1,10)) +
plot_annotation(title="Total greenhouse gas emissions by sector",
subtitle=bquote("57.1 Gt" ~CO[2]~ "in 2023"),
caption=str_wrap("Non-CO2 greenhouse gases are converted to CO2 equivalents using global warming potentials with a 100-year time horizon from the IPCC AR6 WGI (Forster et al., 2021). Sources: Crippa et al. (2024), Friedlingstein et al. (2023).",125),
theme=theme(plot.title=element_text(hjust=0.25,size=14,face="bold",color = '#636363'),
plot.subtitle = element_text(hjust=0.18,size=12,color = '#636363'),
plot.caption = element_text(size = 9,hjust = 0,color = '#bdbdbd')))
plot_ghgs %>% ggplot(aes(x=year,y=value,fill=fct_rev(gas))) +
geom_area(color="#636363") +
geom_line(inherit.aes = FALSE,
data=line_data,aes(x=x,y=y,group=x),
alpha=0.3,linetype="dashed") +
geom_text(inherit.aes = FALSE,
data=plot_ghgs_totals %>% filter(year %in% c(1990,2000,2010,2020,2023)),
aes(x=year,y=63,label=paste(signif(totals,3))),
size=3.5,colour="#252525") +
#ylab("GHG Emissions (GtCO2e/year)") +
scale_fill_manual(values=c("#e78ac3","#fc8d62","#8da0cb","#66c2a5","#a6d854")) +
scale_x_continuous(breaks=c(1990,2000,2010,2020,2023)) +
theme_wl() +
labs(title="Total net anthropogenic greenhouse gas emissions from 1990-2023",
subtitle=bquote("Gt" ~CO[2]~ "/year"),
caption=str_wrap("Non-CO2 greenhouse gases are converted to CO2 equivalents using global warming potentials with a 100-year time horizon from the IPCC AR6 WGI (Forster et al., 2021). Sources: Crippa et al. (2024), Friedlingstein et al. (2023).",125)) +
theme(axis.title = element_blank(),
axis.line.x=element_line(colour='#636363'),
axis.line.y=element_line(colour='#636363'),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
legend.position = "right",
legend.title = element_blank())
plot_spacer() / p + plot_layout(heights=c(0.1,10))
p <- plot_ghgs %>% ggplot(aes(x=year,y=value,fill=fct_rev(gas))) +
geom_area(color="#636363") +
geom_line(inherit.aes = FALSE,
data=line_data,aes(x=x,y=y,group=x),
alpha=0.3,linetype="dashed") +
geom_text(inherit.aes = FALSE,
data=plot_ghgs_totals %>% filter(year %in% c(1990,2000,2010,2020,2023)),
aes(x=year,y=63,label=paste(signif(totals,3))),
size=3.5,colour="#252525") +
#ylab("GHG Emissions (GtCO2e/year)") +
scale_fill_manual(values=c("#e78ac3","#fc8d62","#8da0cb","#66c2a5","#a6d854")) +
scale_x_continuous(breaks=c(1990,2000,2010,2020,2023)) +
theme_wl() +
labs(title="Total net anthropogenic greenhouse gas emissions from 1990-2023",
subtitle=bquote("Gt" ~CO[2]~ "/year"),
caption=str_wrap("Non-CO2 greenhouse gases are converted to CO2 equivalents using global warming potentials with a 100-year time horizon from the IPCC AR6 WGI (Forster et al., 2021). Sources: EDGARv9 (Crippa et al. 2024); GCB 2023 (Friedlingstein et al. 2023).",125)) +
theme(axis.title = element_blank(),
axis.line.x=element_line(colour='#636363'),
axis.line.y=element_line(colour='#636363'),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
legend.position = "right",
legend.title = element_blank())
plot_spacer() / p + plot_layout(heights=c(0.1,10))
plot_spacer() / p + plot_layout(heights=c(0.05,10))
