mutate(value=value*1000)
data_primap <- data_primap %>%
mutate(country=countrycode(area,"iso3c","country.name")) %>%
select(iso=area,country,year,gas,value) %>%
mutate(dataset="PRIMAP CR v2.5.1") %>%
mutate(gas=ifelse(gas=="CO2","CO2 Fossil",gas)) %>%
mutate(gas=ifelse(gas=="FGASES (AR6GWP100)","F-gases",gas))
data_countries <- rbind(data_countries,data_primap)
load(url('https://github.com/lambwf/Codebase/raw/main/data/data_crfs_2023.RData'))
data_crfs <- left_join(data_crfs,gwps %>% select(gas=Species,AR6GWP100))
data_crfs <- data_crfs %>%
mutate(value=as.numeric(value)) %>%
mutate(AR6GWP100=ifelse(is.na(AR6GWP100),1,AR6GWP100)) %>%
mutate(value=value*AR6GWP100) %>%
mutate(value=value*1000)
data_crfs <- data_crfs %>%
mutate(gas=ifelse(!gas %in% c("CO2","CO2 LULUCF","CH4","N2O"),"F-gases",gas)) %>%
group_by(across(c(-value,-AR6GWP100))) %>%
summarise(value=sum(value,na.rm=TRUE)) %>%
mutate(year=as.numeric(year)) %>%
mutate(gas=ifelse(gas=="CO2","CO2 Fossil",gas)) %>%
mutate(dataset="CRFs_2023") %>%
ungroup() %>%
select(iso,country,year,gas,value,dataset)
data_countries <- rbind(data_countries,data_crfs)
data_countries <- rbind(data_countries,
data_lulucf %>%
select(iso,country,year,gas,value) %>%
mutate(dataset="Grassi et al.") %>%
mutate(iso=ifelse(iso=="EUR","EU27",iso)) %>%
filter(year<=2021))
# data_countries <- left_join(data_countries,cc_G20 %>%
#                               add_row(iso="FRA",G20="1") %>%
#                               add_row(iso="DEU",G20="1") %>%
#                               add_row(iso="ITA",G20="1") %>%
#                               add_row(iso="ZAF",G20="1"),by="iso")
# data_countries <- data_countries %>%
#   filter(G20==1) %>%
#   select(-G20)
names <- data_countries %>%
ungroup() %>%
select(iso) %>%
distinct() %>%
arrange(iso) %>%
mutate(country=countrycode(iso,"iso3c","country.name")) %>%
mutate(country=ifelse(iso=="AIR","Intl. Aviation",country)) %>%
mutate(country=ifelse(iso=="SEA","Intl. Shipping",country)) %>%
mutate(country=ifelse(iso=="EU27","European Union",country))
data_countries <- left_join(data_countries %>% ungroup() %>% select(-country),names,by="iso") %>%
filter(!is.na(country)) %>%
select(iso,country,year,gas,dataset,value) %>%
arrange(iso,country,year,gas,dataset)
data_countries <- spread(data_countries,year,value)
addWorksheet(wb,"data_comparison")
writeData(wb, sheet = "data_comparison", data_countries, colNames = T, rowNames = F)
high_emitters <- data_ghg %>%
filter(year==2023) %>%
filter(!iso %in% c("WLD","G20","G7","AU55")) %>%
group_by(country,iso) %>%
summarise(value=sum(value,na.rm=TRUE)) %>%
ungroup() %>%
arrange(desc(value)) %>%
mutate(rank=1) %>%
mutate(rank=cumsum(rank)) %>%
head(6) %>%
select(iso,rank)
data_countries <- left_join(data_ghg,high_emitters) %>%
filter(!is.na(rank))
data_countries <- data_countries %>%
filter(year>=1990) %>%
group_by(iso,country,rank,sector_lv1,sector_lv2,sector_lv2_order,sector_lv2_colours,sector_lv2_icons,year) %>%
summarise(value=sum(value,na.rm=TRUE)/1e6)
data_countries$sector_lv2 <- fct_relevel(data_countries$sector_lv2,"AFOLU: LULUCF")
labels_colours <- data_countries %>%
filter(iso=="CHN") %>%
ungroup() %>%
filter(year==2021) %>%
arrange((sector_lv2)) %>%
mutate(position=1) %>%
mutate(position=cumsum(position))
data_countries$country = as.factor(data_countries$country)
data_countries$country <- fct_reorder(data_countries$country,data_countries$rank)
data_countries_crfs=left_join(data_crfs,high_emitters) %>%
filter(!is.na(rank)) %>%
filter(gas!="CO2 LULUCF") %>%
group_by(iso,country,rank,year) %>%
summarise(value=sum(value,na.rm=T)/1e6)
data_countries_crfs$country <- as.factor(data_countries_crfs$country)
data_countries_crfs$country <- fct_reorder(data_countries_crfs$country,data_countries_crfs$rank)
custom_scales <- data.frame(country=c("China","United States","India","European Union","Russia","Brazil"),
x=2023,y=c(15000,10000,5000,5000,5000,5000))
custom_scales$country <- as.factor(custom_scales$country)
custom_scales$country <- fct_relevel(custom_scales$country,"China","United States","India","European Union","Russia","Brazil")
p1 <- data_countries %>%
ggplot(aes(x=year,y=value,fill=sector_lv2)) +
facet_wrap(.~country,scales="free_y",ncol=2) +
geom_area(color="#636363") +
geom_path(data=data_countries_crfs,
inherit.aes=FALSE,aes(x=year,y=value,group=iso),size=1) +
geom_blank(data=custom_scales,inherit.aes=FALSE,aes(x=x,y=y)) +
theme_wl() +
scale_fill_manual(values = labels_colours$sector_lv2_colours) +
ylab("GHG Emissions (MtCO2e/year)") +
theme(axis.title.x = element_blank(),
axis.title.y = element_text(size=11),
panel.grid.major.x = element_blank(),
strip.background = element_blank(),
strip.text = element_text(hjust=0,size=11,color="#636363",face="bold"),
legend.position = "none",
panel.background = element_blank(),
panel.spacing = unit(0.5,"cm"))
labels_colours <- labels_colours %>%
arrange(desc(sector_lv2_order))
p2 <- labels_colours %>%  ggplot(.,aes(y=rev(sector_lv2_order),label=sector_lv2)) +
geom_point(aes(x=1.9,fill=as.factor(rev(sector_lv2_order))),
shape=22,size=4,color='#636363') +
geom_line(data=data.frame(x=c(1.85,1.95),y=c(0,0)),inherit.aes=FALSE,aes(x=x,y=y),color="black",size=1) +
geom_image(aes(x=2.5+ifelse(sector_lv2=="AFOLU: LULUCF",str_length(sector_lv2)+2,str_length(sector_lv2))/26,image=sector_lv2_icons),by = "height",size=0.06)+
geom_text(hjust=0,aes(x=2),color='#636363',vjust=0.5) +
geom_text(data=data.frame(label="Inventory (excl. LULUCF)"),hjust=0,inherit.aes=FALSE,aes(x=2,y=0,label=label),color='#636363',vjust=0.5) +
theme_wl() +
scale_fill_manual(values = labels_colours$sector_lv2_colours) +
scale_x_continuous(limits=c(1.8,3.5),expand = c(0,0)) +
scale_y_continuous(limits=c(-0.5,9.5),expand = c(0,0)) +
theme(axis.title = element_blank(),
panel.border = element_blank(),
legend.position="none",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
plot.title.position = "plot",
plot.title = element_text(size=11,colour='#bdbdbd',hjust=1,face = "plain"),
plot.background = element_blank(),
plot.margin = unit(c(0,0,0,0),"cm"))
p1 + (plot_spacer() / p2 / plot_spacer() + plot_layout(heights=c(2,3,2))) + plot_layout(widths=c(6,2))
knitr::opts_chunk$set(echo = FALSE)
options(dplyr.summarise.inform = FALSE)
rm(list = ls())
library(tidyverse)
library(openxlsx)
library(countrycode)
library(ggrepel)
library(patchwork)
library(zoo)
library(RColorBrewer)
library(WDI)
library(labelled)
library(grid)
library(ggimage)
source("https://raw.githubusercontent.com/lambwf/Codebase/main/figure_style.R")
source("https://raw.githubusercontent.com/lambwf/Codebase/main/reshape_with_labels.R")
source("https://raw.githubusercontent.com/lambwf/Codebase/main/locate_shares.R")
source("https://raw.githubusercontent.com/lambwf/Codebase/main/load_gcb_countries_v2023.R")
source("https://raw.githubusercontent.com/lambwf/Codebase/main/load_edgar_v9.R")
wb <- createWorkbook()
## load EDGAR data (https://edgar.jrc.ec.europa.eu/dataset_ghg80)
edgar_co2 <- read.xlsx("sources/not public/EDGAR_2024_CO2_1970_2023_v2.xlsx",sheet=2,startRow=9)
edgar_ch4 <- read.xlsx("sources/not public/EDGAR_2024_CH4_1970_2023_v2.xlsx",sheet=2,startRow = 9)
edgar_n2o <- read.xlsx("sources/not public/EDGAR_2024_N2O_1970_2023_v2.xlsx",sheet=2,startRow = 9)
edgar_fgas <- read.xlsx("sources/not public/EDGAR_2024_F-gases_1970_2023_v2.xlsx",sheet=2,startRow = 9)
data_ghg <- load_edgar(edgar_co2,edgar_ch4,edgar_n2o,edgar_fgas)
## join GWPs and calculate CO2e
gwps <- read.csv("https://raw.githubusercontent.com/openclimatedata/globalwarmingpotentials/main/globalwarmingpotentials.csv",skip = 10)
data_ghg$gas <- gsub("-","",data_ghg$gas)
data_ghg <- left_join(data_ghg,gwps %>% select(gas=Species,AR6GWP100)) %>%
mutate(AR6GWP100=ifelse(gas=="CO2",1,AR6GWP100))
## remove biogenic CO2
data_ghg <- data_ghg %>%
filter(gas!="CO2bio")
## check all gwps joined
check <- data_ghg %>% filter(is.na(AR6GWP100))
check <- data_ghg %>% select(gas,AR6GWP100) %>% distinct()
data_ghg <- data_ghg %>% mutate(value_gwp=value*AR6GWP100)
list_fgases <- data_ghg %>%
select(gas) %>%
distinct() %>%
mutate(group=ifelse(gas=="CO2","CO2 Fossil",NA)) %>%
mutate(group=ifelse(gas=="CH4","CH4",group)) %>%
mutate(group=ifelse(gas=="N2O","N2O",group)) %>%
mutate(group=ifelse(is.na(group),"F-gases",group))
data_ghg <- left_join(data_ghg,list_fgases,by="gas")
data_ghg <- data_ghg %>%
mutate(gas=group) %>%
group_by(iso,country,code,code_description,gas,year) %>%
summarise(value=sum(value_gwp,na.rm=TRUE))
## Gg to tons
data_ghg$value = data_ghg$value*1000
## Grassi et al. LULUCF data (https://zenodo.org/records/7190601)
data_lulucf <- read.xlsx('sources/not public/Grassi_et_al_LULUCF.xlsx')
data_lulucf <- gather(data_lulucf,year,value,-country,-iso)
data_lulucf <- data_lulucf %>%
mutate(year=as.numeric(year)) %>%
filter(!is.na(year)) %>%
mutate(value=value*1e6) %>%
mutate(code="3B") %>%
mutate(code_description="Land use change") %>%
mutate(gas="CO2 LULUCF") %>%
select(iso,country,code,code_description,gas,year,value) %>%
filter(year<=2021)
data_lulucf_v2 <- read.xlsx('sources/not public/LULUCF NGHGI data for UNEP 2024.xlsx',startRow = 3) %>%
rename(category=LAND.CATEGORY,country=UNFCCC.country,iso=country.code)
data_lulucf_v2 <- gather(data_lulucf_v2,year,value,`2000`:`2023`) %>%
filter(category=="LULUCF net") %>%
mutate(value=value*1e6) %>%
mutate(year=as.numeric(year)) %>%
mutate(gas="CO2 LULUCF") %>%
mutate(code="3B") %>%
mutate(code_description="Land use change") %>%
filter(!is.na(year)) %>%
filter(!is.na(iso)) %>%
select(iso,country,code,code_description,gas,year,value) %>%
filter(year<=2021)
data_lulucf <- rbind(data_lulucf %>% filter(year<2000),data_lulucf_v2)
data_lulucf <- data_lulucf %>%
arrange(country,iso,year)
data_ghg <- rbind(data_ghg,data_lulucf)
### consistent names
newnames <- data_ghg %>%
ungroup() %>%
select(iso) %>%
distinct() %>%
mutate(newname=countrycode(iso,"iso3c","country.name")) %>%
mutate(newname=ifelse(iso=="AIR","Intl. Aviation",newname)) %>%
mutate(newname=ifelse(iso=="SEA","Intl. Shipping",newname)) %>%
mutate(newname=ifelse(iso=="SCG","Serbia and Montenegro",newname)) %>%
mutate(newname=ifelse(iso=="ANT","Netherlands Antilles",newname)) %>%
mutate(newname=ifelse(iso=="WLD","World",newname))
data_ghg <- left_join(data_ghg,newnames,by="iso") %>%
mutate(country=newname) %>%
select(-newname) %>%
filter(!is.na(iso))
## aggregate world
data_ghg_world <- data_ghg %>%
filter(iso!="WLD") %>%
filter(gas!="CO2 LULUCF") %>%
group_by(code,code_description,gas,year) %>%
summarise(value=sum(value,na.rm=TRUE)) %>%
mutate(iso="WLD") %>%
mutate(country="World")
data_ghg <- rbind(data_ghg,data_ghg_world)
## aggregate sectors
data_ghg <- left_join(data_ghg,read.xlsx("sources/cc_sectors.xlsx"),by=join_by(code, code_description))
data_ghg$gas <- as.factor(data_ghg$gas)
data_ghg$gas <- fct_relevel(data_ghg$gas,"CO2 Fossil","CO2 LULUCF","CH4","N2O","F-gases")
data_ghg$sector_lv1 <- as.factor(data_ghg$sector_lv1)
data_ghg$sector_lv1 <- fct_reorder(data_ghg$sector_lv1,data_ghg$sector_lv1_order)
data_ghg$sector_lv2 <- as.factor(data_ghg$sector_lv2)
data_ghg$sector_lv2 <- fct_reorder(data_ghg$sector_lv2,data_ghg$sector_lv2_order)
data_ghg$sector_lv2 <- as.factor(data_ghg$sector_lv2)
data_ghg$sector_lv2 <- fct_reorder(data_ghg$sector_lv2,data_ghg$sector_lv2_order)
data_ghg$sector_lv3 <- as.factor(data_ghg$sector_lv3)
data_ghg$sector_lv3 <- fct_reorder(data_ghg$sector_lv3,data_ghg$sector_lv3_order)
data_ghg <- data_ghg %>%
group_by(across(c(-code,-code_description,-sector_lv2_codes,-sector_lv3_codes))) %>%
summarise(value=sum(value,na.rm=TRUE))
## aggregate EU
cc_EU <- read.csv("https://raw.githubusercontent.com/openclimatedata/countrygroups/main/data/european-union.csv") %>%
select(iso=Code) %>%
mutate(EU="1")
data_ghg_eu <- left_join(data_ghg,cc_EU,by="iso") %>%
filter(!is.na(EU)) %>%
mutate(iso="EU27") %>%
select(-EU) %>%
mutate(country="European Union") %>%
group_by(across(c(-value))) %>%
summarise(value=sum(value,na.rm=T))
data_ghg_eu <- rbind(data_ghg_eu,data_ghg %>%
filter(iso=="EUR") %>%
filter(sector_lv2=="AFOLU: LULUCF") %>%
mutate(iso="EU27") %>%
mutate(country="European Union"))
data_ghg <- rbind(data_ghg %>% filter(iso!="EUR"),data_ghg_eu)
## aggregate African Union
cc_AU <- read.xlsx("sources/cc_African_Union.xlsx") %>%
select(iso) %>%
mutate(AU="1")
data_ghg_au <- left_join(data_ghg,cc_AU,by="iso") %>%
filter(!is.na(AU)) %>%
mutate(iso="AU55") %>%
select(-AU) %>%
mutate(country="African Union") %>%
group_by(across(c(-value))) %>%
summarise(value=sum(value,na.rm=T))
data_ghg <- rbind(data_ghg,data_ghg_au)
## aggregate G7
cc_G7 <- read.csv("https://raw.githubusercontent.com/openclimatedata/countrygroups/main/data/g7.csv") %>%
select(iso=Code) %>%
mutate(G7="1") %>%
mutate(iso=ifelse(iso=="EUU","EU27",iso)) %>%
filter(!iso %in% c("FRA","DEU","ITA"))                  ## no double counting EU countries!
data_ghg_g7 <- left_join(data_ghg,cc_G7,by="iso") %>%
filter(!is.na(G7)) %>%
mutate(iso="G7") %>%
select(-G7) %>%
mutate(country="G7 Countries") %>%
group_by(across(c(-value))) %>%
summarise(value=sum(value,na.rm=T))
data_ghg <- rbind(data_ghg,data_ghg_g7)
## aggregate G20
cc_G20 <- read.csv("https://raw.githubusercontent.com/openclimatedata/countrygroups/main/data/g20.csv") %>%
select(iso=Code) %>%
mutate(G20="1") %>%
mutate(iso=ifelse(iso=="EUU","EU27",iso)) %>%
#add_row(iso="AU55",G20="1") %>%
#filter(!iso %in% c("ZAF")) %>%                          ## no double counting AU countries!
filter(!iso %in% c("FRA","DEU","ITA"))                  ## no double counting EU countries!
data_ghg_g20 <- left_join(data_ghg,cc_G20,by="iso") %>%
filter(!is.na(G20)) %>%
mutate(iso="G20") %>%
select(-G20) %>%
mutate(country="G20 Countries") %>%
group_by(across(c(-value))) %>%
summarise(value=sum(value,na.rm=T))
data_ghg <- rbind(data_ghg,data_ghg_g20)
## aggregate non-G20
# data_ghg_ng20 <- left_join(data_ghg,cc_G20,by="iso")
# data_ghg_ng20 <- left_join(data_ghg_ng20,cc_EU,by="iso")
# #data_ghg_ng20 <- left_join(data_ghg_ng20,cc_AU,by="iso")
# data_ghg_ng20 <- data_ghg_ng20 %>%
#   filter(is.na(G20)) %>%
#   filter(is.na(EU)) %>%
# #  filter(is.na(AU)) %>%
#   filter(!iso %in% c("AIR","SEA","G7","G20","AU55","WLD"))
#
# cc_nG20 <- data_ghg_ng20 %>%
#   ungroup() %>%
#   select(iso) %>%
#   distinct() %>%
#   mutate(nG20="1")
#
# data_ghg_ng20 <- data_ghg_ng20 %>%
#   mutate(iso="Non-G20") %>%
#   select(-G20,-EU,-AU) %>%
#   mutate(country="Non-G20 Countries") %>%
#   group_by(across(c(-value))) %>%
#   summarise(value=sum(value,na.rm=T))
#
# data_ghg <- rbind(data_ghg,data_ghg_ng20)
cc_aggregates <- data_ghg %>%
ungroup() %>%
select(iso,country) %>%
distinct()
cc_aggregates <- left_join(cc_aggregates,cc_AU,by="iso")
cc_aggregates <- left_join(cc_aggregates,cc_EU,by="iso")
cc_aggregates <- left_join(cc_aggregates,cc_G20,by="iso")
cc_aggregates <- left_join(cc_aggregates,cc_G7,by="iso")
#cc_aggregates <- left_join(cc_aggregates,cc_nG20,by="iso")
cc_aggregates <- cc_aggregates %>%
mutate(G20=ifelse(!is.na(EU),"1",G20)) %>%
mutate(G20=ifelse(!is.na(AU),"1",G20))
cc_aggregates <- gather(cc_aggregates,var,value,-iso,-country) %>%
mutate(value=ifelse(value=="1","x",NA))
cc_aggregates <- spread(cc_aggregates,var,value)
data_ghg <- data_ghg %>%
arrange(iso,country,gas,year,sector_lv2)
data_countries <- data_ghg %>%
filter(iso!="AU55") %>%
filter(gas!="CO2 LULUCF") %>%
group_by(iso,country,year,gas) %>%
summarise(value=sum(value,na.rm=TRUE)) %>%
mutate(dataset="EDGARv9")
data_primap <- read.csv("sources/Guetschow_et_al_2024-PRIMAP-hist_v2.5.1_final_27-Feb-2024.csv")
data_primap <- gather(data_primap,year,value,X1750:X2022)
data_primap$year <- gsub("X","",data_primap$year)
names(data_primap) <- c("source","scenario","provenance","area","gas","unit","category","year","value")
data_primap <- data_primap %>%
filter(category=="M.0.EL") %>%
filter(scenario=="HISTCR") %>%
filter(gas %in% c("CO2","CH4","N2O","FGASES (AR6GWP100)")) %>%
mutate(year=as.numeric(year)) %>%
filter(year>=1970)
data_primap <- left_join(data_primap,gwps %>% select(gas=Species,AR6GWP100))
data_primap <- data_primap %>%
mutate(AR6GWP100=ifelse(is.na(AR6GWP100),1,AR6GWP100)) %>%
mutate(value=value*AR6GWP100) %>%
mutate(value=value*1000)
data_primap <- data_primap %>%
mutate(country=countrycode(area,"iso3c","country.name")) %>%
select(iso=area,country,year,gas,value) %>%
mutate(dataset="PRIMAP CR v2.5.1") %>%
mutate(gas=ifelse(gas=="CO2","CO2 Fossil",gas)) %>%
mutate(gas=ifelse(gas=="FGASES (AR6GWP100)","F-gases",gas))
data_countries <- rbind(data_countries,data_primap)
load(url('https://github.com/lambwf/Codebase/raw/main/data/data_crfs_2023.RData'))
data_crfs <- left_join(data_crfs,gwps %>% select(gas=Species,AR6GWP100))
data_crfs <- data_crfs %>%
mutate(value=as.numeric(value)) %>%
mutate(AR6GWP100=ifelse(is.na(AR6GWP100),1,AR6GWP100)) %>%
mutate(value=value*AR6GWP100) %>%
mutate(value=value*1000)
data_crfs <- data_crfs %>%
mutate(gas=ifelse(!gas %in% c("CO2","CO2 LULUCF","CH4","N2O"),"F-gases",gas)) %>%
group_by(across(c(-value,-AR6GWP100))) %>%
summarise(value=sum(value,na.rm=TRUE)) %>%
mutate(year=as.numeric(year)) %>%
mutate(gas=ifelse(gas=="CO2","CO2 Fossil",gas)) %>%
mutate(dataset="CRFs_2023") %>%
ungroup() %>%
select(iso,country,year,gas,value,dataset)
data_countries <- rbind(data_countries,data_crfs)
data_countries <- rbind(data_countries,
data_lulucf %>%
select(iso,country,year,gas,value) %>%
mutate(dataset="Grassi et al.") %>%
mutate(iso=ifelse(iso=="EUR","EU27",iso)) %>%
filter(year<=2021))
# data_countries <- left_join(data_countries,cc_G20 %>%
#                               add_row(iso="FRA",G20="1") %>%
#                               add_row(iso="DEU",G20="1") %>%
#                               add_row(iso="ITA",G20="1") %>%
#                               add_row(iso="ZAF",G20="1"),by="iso")
# data_countries <- data_countries %>%
#   filter(G20==1) %>%
#   select(-G20)
names <- data_countries %>%
ungroup() %>%
select(iso) %>%
distinct() %>%
arrange(iso) %>%
mutate(country=countrycode(iso,"iso3c","country.name")) %>%
mutate(country=ifelse(iso=="AIR","Intl. Aviation",country)) %>%
mutate(country=ifelse(iso=="SEA","Intl. Shipping",country)) %>%
mutate(country=ifelse(iso=="EU27","European Union",country))
data_countries <- left_join(data_countries %>% ungroup() %>% select(-country),names,by="iso") %>%
filter(!is.na(country)) %>%
select(iso,country,year,gas,dataset,value) %>%
arrange(iso,country,year,gas,dataset)
data_countries <- spread(data_countries,year,value)
addWorksheet(wb,"data_comparison")
writeData(wb, sheet = "data_comparison", data_countries, colNames = T, rowNames = F)
high_emitters <- data_ghg %>%
filter(year==2023) %>%
filter(!iso %in% c("WLD","G20","G7","AU55")) %>%
group_by(country,iso) %>%
summarise(value=sum(value,na.rm=TRUE)) %>%
ungroup() %>%
arrange(desc(value)) %>%
mutate(rank=1) %>%
mutate(rank=cumsum(rank)) %>%
head(6) %>%
select(iso,rank)
data_countries <- left_join(data_ghg,high_emitters) %>%
filter(!is.na(rank))
data_countries <- data_countries %>%
filter(year>=1990) %>%
group_by(iso,country,rank,sector_lv1,sector_lv2,sector_lv2_order,sector_lv2_colours,sector_lv2_icons,year) %>%
summarise(value=sum(value,na.rm=TRUE)/1e6)
data_countries$sector_lv2 <- fct_relevel(data_countries$sector_lv2,"AFOLU: LULUCF")
labels_colours <- data_countries %>%
filter(iso=="CHN") %>%
ungroup() %>%
filter(year==2021) %>%
arrange((sector_lv2)) %>%
mutate(position=1) %>%
mutate(position=cumsum(position))
data_countries$country = as.factor(data_countries$country)
data_countries$country <- fct_reorder(data_countries$country,data_countries$rank)
data_countries_crfs=left_join(data_crfs,high_emitters) %>%
filter(!is.na(rank)) %>%
filter(gas!="CO2 LULUCF") %>%
group_by(iso,country,rank,year) %>%
summarise(value=sum(value,na.rm=T)/1e6)
data_countries_crfs$country <- as.factor(data_countries_crfs$country)
data_countries_crfs$country <- fct_reorder(data_countries_crfs$country,data_countries_crfs$rank)
custom_scales <- data.frame(country=c("China","United States","India","European Union","Russia","Brazil"),
x=2023,y=c(15000,10000,5000,5000,5000,5000))
custom_scales$country <- as.factor(custom_scales$country)
custom_scales$country <- fct_relevel(custom_scales$country,"China","United States","India","European Union","Russia","Brazil")
p1 <- data_countries %>%
ggplot(aes(x=year,y=value,fill=sector_lv2)) +
facet_wrap(.~country,scales="free_y",ncol=2) +
geom_area(color="#636363") +
geom_path(data=data_countries_crfs,
inherit.aes=FALSE,aes(x=year,y=value,group=iso),size=1) +
geom_blank(data=custom_scales,inherit.aes=FALSE,aes(x=x,y=y)) +
theme_wl() +
scale_fill_manual(values = labels_colours$sector_lv2_colours) +
ylab("GHG Emissions (MtCO2e/year)") +
theme(axis.title.x = element_blank(),
axis.title.y = element_text(size=11),
panel.grid.major.x = element_blank(),
strip.background = element_blank(),
strip.text = element_text(hjust=0,size=11,color="#636363",face="bold"),
legend.position = "none",
panel.background = element_blank(),
panel.spacing = unit(0.5,"cm"))
labels_colours <- labels_colours %>%
arrange(desc(sector_lv2_order))
p2 <- labels_colours %>%  ggplot(.,aes(y=rev(sector_lv2_order),label=sector_lv2)) +
geom_point(aes(x=1.9,fill=as.factor(rev(sector_lv2_order))),
shape=22,size=4,color='#636363') +
geom_line(data=data.frame(x=c(1.85,1.95),y=c(0,0)),inherit.aes=FALSE,aes(x=x,y=y),color="black",size=1) +
geom_image(aes(x=2.5+ifelse(sector_lv2=="AFOLU: LULUCF",str_length(sector_lv2)+2,str_length(sector_lv2))/26,image=sector_lv2_icons),by = "height",size=0.06)+
geom_text(hjust=0,aes(x=2),color='#636363',vjust=0.5) +
geom_text(data=data.frame(label="Inventory (excl. LULUCF)"),hjust=0,inherit.aes=FALSE,aes(x=2,y=0,label=label),color='#636363',vjust=0.5) +
theme_wl() +
scale_fill_manual(values = labels_colours$sector_lv2_colours) +
scale_x_continuous(limits=c(1.8,3.5),expand = c(0,0)) +
scale_y_continuous(limits=c(-0.5,9.5),expand = c(0,0)) +
theme(axis.title = element_blank(),
panel.border = element_blank(),
legend.position="none",
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
panel.grid.major = element_blank(),
plot.title.position = "plot",
plot.title = element_text(size=11,colour='#bdbdbd',hjust=1,face = "plain"),
plot.background = element_blank(),
plot.margin = unit(c(0,0,0,0),"cm"))
p1 + (plot_spacer() / p2 / plot_spacer() + plot_layout(heights=c(2,3,2))) + plot_layout(widths=c(6,2))
