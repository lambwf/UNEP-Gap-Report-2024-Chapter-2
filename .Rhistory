filter(!iso %in% c("WLD","G20","G7","AU55","EU27"))      # remove aggregates
data_growth <- left_join(data_growth,cc_G20,by="iso")
data_growth <- left_join(data_growth,cc_EU,by="iso")
data_growth <- data_growth %>%
filter(year==2023) %>%
mutate(G20=ifelse(!is.na(EU),1,G20)) %>%
group_by(iso,country,year,G20,EU) %>%
summarise(value=sum(value,na.rm=TRUE))
## the growth rates of G20 vs non-G20 countries
data_growth <- data_ghg %>%
ungroup() %>%
filter(!iso %in% c("WLD","G20","G7","AU55","EU27"))      # remove aggregates
data_growth <- left_join(data_growth,cc_G20,by="iso")
data_growth <- left_join(data_growth,cc_EU,by="iso")
data_growth <- data_growth %>%
data_growth <- data_growth %>%
filter(year==2023) %>%
mutate(G20=ifelse(!is.na(EU),1,G20)) %>%
mutate(G20=ifelse(is.na(G20),0,G20)) %>%
group_by(iso,country,year,G20) %>%
summarise(value=sum(value,na.rm=TRUE))
data_growth <- data_ghg %>%
ungroup() %>%
filter(!iso %in% c("WLD","G20","G7","AU55","EU27"))      # remove aggregates
data_growth <- left_join(data_growth,cc_G20,by="iso")
data_growth <- left_join(data_growth,cc_EU,by="iso")
data_growth <- data_growth %>%
mutate(G20=ifelse(!is.na(EU),1,G20)) %>%
mutate(G20=ifelse(is.na(G20),0,G20)) %>%
group_by(year,G20) %>%
summarise(value=sum(value,na.rm=TRUE))
data_growth <- data_ghg %>%
ungroup() %>%
filter(!iso %in% c("WLD","G20","G7","AU55","EU27"))      # remove aggregates
data_growth <- left_join(data_growth,cc_G20,by="iso")
data_growth <- left_join(data_growth,cc_EU,by="iso")
data_growth <- data_growth %>%
filter(year %in% c(2022,2023)) %>%
mutate(G20=ifelse(!is.na(EU),1,G20)) %>%
mutate(G20=ifelse(is.na(G20),0,G20)) %>%
group_by(year,G20) %>%
summarise(value=sum(value,na.rm=TRUE))
data_growth <- left_join(data_ghg %>% filter(iso=="WLD") %>% group_by(year) %>% summarise(value=sum(value,na.rm=TRUE)))
data_growth <- left_join(data_ghg %>% filter(iso=="WLD") %>% group_by(year) %>% summarise(global_total=sum(value,na.rm=TRUE)),by="year")
data_growth <- left_join(data_growth,data_ghg %>% filter(iso=="WLD") %>% group_by(year) %>% summarise(global_total=sum(value,na.rm=TRUE)),by="year")
40192297798+11827650707
data_growth <- data_growth %>%
mutate(ratio=value/global_total)
data_growth <- data_growth %>%
mutate(ratio=value/global_total) %>%
group_by(G20) %>%
mutate(change_abs=last(value)-first(value),
change_rel=change_abs/first(value))
data_growth <- data_growth %>%
mutate(ratio=value/global_total) %>%
group_by(G20) %>%
mutate(change_abs=last(value)-first(value),
change_rel=change_abs/first(value)) %>%
mutate(change_rel=round(change_rel*100,2))
(53018275477-52019948505)/52019948505
0.01919123*100
knitr::opts_chunk$set(echo = FALSE)
rm(list = ls())
library(tidyverse)
library(openxlsx)
library(countrycode)
library(ggrepel)
library(patchwork)
library(zoo)
library(RColorBrewer)
library(WDI)
library(labelled)
library(grid)
library(ggimage)
source("https://raw.githubusercontent.com/lambwf/Codebase/main/figure_style.R")
source("https://raw.githubusercontent.com/lambwf/Codebase/main/reshape_with_labels.R")
source("https://raw.githubusercontent.com/lambwf/Codebase/main/locate_shares.R")
source("https://raw.githubusercontent.com/lambwf/Codebase/main/load_gcb_countries_v2023.R")
source("https://raw.githubusercontent.com/lambwf/Codebase/main/load_edgar_v9.R")
source("https://raw.githubusercontent.com/lambwf/Codebase/main/growth_rate.R")
panel.grid.major.x = element_blank(),
)
knitr::opts_chunk$set(echo = FALSE)
rm(list = ls())
library(tidyverse)
library(openxlsx)
library(countrycode)
library(ggrepel)
library(patchwork)
library(zoo)
library(RColorBrewer)
library(WDI)
library(labelled)
library(grid)
library(ggimage)
source("https://raw.githubusercontent.com/lambwf/Codebase/main/figure_style.R")
source("https://raw.githubusercontent.com/lambwf/Codebase/main/reshape_with_labels.R")
source("https://raw.githubusercontent.com/lambwf/Codebase/main/locate_shares.R")
source("https://raw.githubusercontent.com/lambwf/Codebase/main/load_gcb_countries_v2023.R")
source("https://raw.githubusercontent.com/lambwf/Codebase/main/load_edgar_v9.R")
source("https://raw.githubusercontent.com/lambwf/Codebase/main/growth_rate.R")
#### Load and organise EDGAR data
# Load EDGAR data (https://edgar.jrc.ec.europa.eu/dataset_ghg80)
edgar_co2  <- read.xlsx("sources/not public/EDGAR_2024_CO2_1970_2023_v2.xlsx",sheet=2,startRow=9)
edgar_ch4  <- read.xlsx("sources/not public/EDGAR_2024_CH4_1970_2023_v2.xlsx",sheet=2,startRow = 9)
edgar_n2o  <- read.xlsx("sources/not public/EDGAR_2024_N2O_1970_2023_v2.xlsx",sheet=2,startRow = 9)
edgar_fgas <- read.xlsx("sources/not public/EDGAR_2024_F-gases_1970_2023_v2.xlsx",sheet=2,startRow = 9)
data_ghg   <- load_edgar(edgar_co2,edgar_ch4,edgar_n2o,edgar_fgas)
# Remove biogenic CO2 as these emissions are normally accounted in equilibrium with removals
data_ghg <- data_ghg %>% filter(gas!="CO2bio")
# Load global warming potentials (GWPs) to calculate CO2e for each gas
gwps <- read.csv("https://raw.githubusercontent.com/openclimatedata/globalwarmingpotentials/main/globalwarmingpotentials.csv",skip = 10)
gwps <- gwps %>% select(gas=Species,gwp100=AR6GWP100)
# Join GWPs
data_ghg$gas <- gsub("-","",data_ghg$gas)
data_ghg <- left_join(data_ghg,gwps) %>%
mutate(gwp100=ifelse(gas=="CO2",1,gwp100))
# Check that all gwps joined
check <- data_ghg %>% filter(is.na(gwp100))
check <- data_ghg %>% select(gas,gwp100) %>% distinct()
# Calculate CO2e for each gas
data_ghg <- data_ghg %>% mutate(value_gwp=value*gwp100)
# Create list of individual f-gases to merge these into a single gas variable
list_fgases <- data_ghg %>%
select(gas) %>%
distinct() %>%
mutate(group=ifelse(gas=="CO2","CO2 Fossil",NA)) %>%
mutate(group=ifelse(gas=="CH4","CH4",group)) %>%
mutate(group=ifelse(gas=="N2O","N2O",group)) %>%
mutate(group=ifelse(is.na(group),"F-gases",group))
# Group f-gases into a single variable
data_ghg <- left_join(data_ghg,list_fgases,by="gas")
data_ghg <- data_ghg %>%
mutate(gas=group) %>%
group_by(iso,country,code,code_description,gas,year) %>%
summarise(value=sum(value_gwp,na.rm=TRUE))
# Convert Gg to tons
data_ghg$value = data_ghg$value*1000
# Sum up emissions to sector and year
data_ghg <- data_ghg %>%
group_by(code,code_description,gas,year) %>%
summarise(value=sum(value,na.rm=TRUE))
# Check global totals
check <- data_ghg %>% filter(year==2023) %>% group_by(gas) %>% summarise(value=sum(value,na.rm=T))
sum(check$value)
#### Join additional global data
# Load Global Carbon Budget (GCB) CO2 land use change (LUC) emissions (https://globalcarbonbudget.org/carbonbudget2023/)
data_gcb_co2_luc <- load_gcb_countries_luc(
readxl::read_xlsx('sources/National_LandUseChange_Carbon_Emissions_2023v1.0.xlsx',range="A8:GT182",sheet=2),
readxl::read_xlsx('sources/National_LandUseChange_Carbon_Emissions_2023v1.0.xlsx',range="A8:GT182",sheet=3),
readxl::read_xlsx('sources/National_LandUseChange_Carbon_Emissions_2023v1.0.xlsx',range="A8:GT182",sheet=4))
data_gcb_co2_luc <- data_gcb_co2_luc %>%
filter(year>=1970) %>%
filter(country=="Global") %>%
select(year,value=mean) %>%
mutate(year=as.numeric(year)) %>%
mutate(value=value*1e9)
# Add the GCB projection for 2023 (https://essd.copernicus.org/articles/15/5301/2023/) and join
data_gcb_co2_luc <- data_gcb_co2_luc %>%
add_row(year=2023,value=1.1*(44/12)*1e9)
data_gcb_co2_luc <- data_gcb_co2_luc %>%
mutate(code="3B") %>%
mutate(code_description="Land use change") %>%
mutate(gas="CO2 LULUCF")
data_ghg <- rbind(data_ghg,data_gcb_co2_luc)
# Add cement carbonation from GCB (https://globalcarbonbudget.org/carbonbudget2023/)
data_gcb_co2_cc <- read.xlsx('sources/Global_Carbon_Budget_2023v1.1.xlsx',sheet=2,startRow = 22,cols=c(1,7))
data_gcb_co2_cc <- data_gcb_co2_cc %>%
rename(year=Year,value=cement.carbonation.sink) %>%
mutate(value=-(value*(44/12)*1e9)) %>%
mutate(code="2.A.1.X") %>%
mutate(code_description="Cement carbonation") %>%
mutate(gas="CO2 Fossil")
# data_ghg <- rbind(data_ghg,data_gcb_co2_cc)
# Load global fire emissions (GFED) CH4 data (https://www.geo.vu.nl/~gwerf/GFED/GFED4/tables/GFED4.1s_CH4.txt)
# Following GCB convention, only use global tropical fires and SE Asia peat fires
data_gfed_ch4 <- read.xlsx("sources/GFED4.1s_2024.xlsx",sheet="GFED_CH4",rows = c(14,105,122))
data_gfed_ch4 <- gather(data_gfed_ch4,year,value,`1997`:`2023`)
data_gfed_ch4 <- data_gfed_ch4 %>%
group_by(year) %>%
summarise(value=sum(value))
data_gfed_ch4 <- data_gfed_ch4 %>%
mutate(var="CH4") %>%
select(year,var,value) %>%
mutate(value=value*1E10) %>% #1e10 grams to grams
mutate(value=value/1e6) %>%
mutate(value=value/1e6) %>%
mutate(source="GFED v4.1*") %>%
mutate(units="MtCH4") %>%
select(year,value,source,var,units)
# Load global fire emissions (GFED) N2O data (https://www.geo.vu.nl/~gwerf/GFED/GFED4/tables/GFED4.1s_N2O.txt)
# Following GCB convention, only use global tropical fires and SE Asia peat fires
data_gfed_n2o <- read.xlsx("sources/GFED4.1s_2024.xlsx",sheet="GFED_N2O",rows = c(14,105,122))
data_gfed_n2o <- gather(data_gfed_n2o,year,value,`1997`:`2023`)
data_gfed_n2o <- data_gfed_n2o %>%
group_by(year) %>%
summarise(value=sum(value))
data_gfed_n2o <- data_gfed_n2o %>%
mutate(var="N2O") %>%
mutate(value=value*1E9) %>% #1e9 grams to grams
mutate(value=value/1e6) %>%
mutate(value=value/1e6) %>%
mutate(source="GFED v4.1*") %>%
mutate(units="MtN2O") %>%
select(year,value,source,var,units)
# Extend GFED to before 1997 using CMIP6 input data
# (https://github.com/openclimatedata/global-biomass-burning-emissions/blob/main/data/gbbe-extended.csv)
# (Not possible because CMIP6 doesn't dissaggregate by source or region)
# data_gfed_extension <- read.csv("https://raw.githubusercontent.com/openclimatedata/global-biomass-burning-emissions/main/data/gbbe-extended.csv")
# data_gfed_extension <- data_gfed_extension %>%
#   select(year=Year,CH4,N2O) %>%
#   mutate(year=as.character(year))
#
# data_gfed_ch4 <- full_join(data_gfed_ch4,data_gfed_extension %>% select(year,CH4))
# data_gfed_ch4 <- data_gfed_ch4 %>%
#   mutate(source=na.locf(source)) %>%
#   mutate(var=na.locf(var)) %>%
#   mutate(units=na.locf(units)) %>%
#   arrange(year) %>%
#   mutate(value=ifelse(year<1997,CH4,value)) %>%
#   select(-CH4)
#
# data_gfed_n2o <- full_join(data_gfed_n2o,data_gfed_extension %>% select(year,N2O))
# data_gfed_n2o <- data_gfed_n2o %>%
#   mutate(source=na.locf(source)) %>%
#   mutate(var=na.locf(var)) %>%
#   mutate(units=na.locf(units)) %>%
#   arrange(year) %>%
#   mutate(value=ifelse(year<1997,N2O,value)) %>%
#   select(-N2O)
# Join GFED CH4 and N2O to data frame
data_gfed <- rbind(data_gfed_ch4,data_gfed_n2o)
data_gfed <- left_join(data_gfed,gwps,by=c("var"="gas"))
data_gfed <- data_gfed %>%
filter(year>=1970) %>%
mutate(value=value*gwp100) %>%
mutate(value=value*1e6)
data_gfed <- data_gfed %>%
select(year,value,gas=var) %>%
mutate(code="3X") %>%
mutate(code_description="Fires") %>%
mutate(year=as.numeric(year))
# data_ghg <- rbind(data_ghg,data_gfed)
#### Aggregate sectors and set factor levels
# Aggregate sectors based on own excel file
write.xlsx(data_ghg %>% ungroup() %>% select(code,code_description) %>% distinct() %>% arrange(code),"cc_sectors.xlsx")
data_ghg <- left_join(data_ghg,read.xlsx("sources/cc_sectors.xlsx"),by=join_by(code, code_description))
# Set factor order based on own excel file
data_ghg$gas <- as.factor(data_ghg$gas)
data_ghg$gas <- fct_relevel(data_ghg$gas,"CO2 Fossil","CO2 LULUCF","CH4","N2O","F-gases")
data_ghg$sector_lv1 <- as.factor(data_ghg$sector_lv1)
data_ghg$sector_lv1 <- fct_reorder(data_ghg$sector_lv1,data_ghg$sector_lv1_order)
data_ghg$sector_lv2 <- as.factor(data_ghg$sector_lv2)
data_ghg$sector_lv2 <- fct_reorder(data_ghg$sector_lv2,data_ghg$sector_lv2_order)
data_ghg$sector_lv3 <- as.factor(data_ghg$sector_lv3)
data_ghg$sector_lv3 <- fct_reorder(data_ghg$sector_lv3,data_ghg$sector_lv3_order)
# Calculate total emissions by gas and year
plot_ghgs <- data_ghg %>%
filter(year>=1990) %>%
group_by(gas,year) %>%
summarise(value=sum(value,na.rm=TRUE)/1e9)
# Calculate total emissions by year
plot_ghgs_totals <- plot_ghgs %>%
group_by(year) %>%
summarise(totals=sum(value))
# Calculate decadal growth rates
plot_ghgs_totals <- plot_ghgs_totals %>%
mutate(decade=cut(year,breaks=c(1990,1999,2009,2019),include.lowest = TRUE,labels=c("1990-1999","2000-2009","2010-2019"))) %>%
group_by(decade) %>%
mutate(growth_rate=growth_rate(year,totals)$rate) %>%
mutate(growth_rate=round(growth_rate*100,1))
# Make variable to display vertical lines and totals each decade
line_data <- data.frame(x=c(1990,1990,2000,2000,2010,2010,2020,2020,2023,2023),y=c(0,60))
# Plot
plot_ghgs %>% ggplot(aes(x=year,y=value,fill=fct_rev(gas))) +
geom_area(color="#636363") +
geom_line(inherit.aes = FALSE,
data=line_data,aes(x=x,y=y,group=x),
alpha=0.3,linetype="dashed") +
geom_text(inherit.aes = FALSE,
data=plot_ghgs_totals %>% filter(year %in% c(1990,2000,2010,2020,2023)),
aes(x=year,y=63,label=paste(signif(totals,3))),
size=3.5,colour="#252525") +
#ylab("GHG Emissions (GtCO2e/year)") +
scale_fill_manual(values=c("#e78ac3","#fc8d62","#8da0cb","#66c2a5","#a6d854")) +
scale_x_continuous(breaks=c(1990,2000,2010,2020,2023)) +
theme_wl() +
theme(axis.title.x = element_blank(),
axis.line.x=element_line(colour='#636363'),
axis.line.y=element_line(colour='#636363'),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
legend.position = "right",
legend.title = element_blank()) +
labs(title="Total net anthropogenic greenhouse gas emissions from 1990-2023",
subtitle=bquote("Gt" ~CO[2]~ "/year"),
caption=bquote("Non-" ~CO[2]~ "greenhouse gases are converted to" ~CO[2]~ "equivalents using global warming potentials with a 100-year time horizon from the IPCC WGI AR6 (Forster et al., 2021). Sources: Crippa et al. (2024), Friedlingstein et al. (2023)."
)
plot_ghgs %>% ggplot(aes(x=year,y=value,fill=fct_rev(gas))) +
geom_area(color="#636363") +
geom_line(inherit.aes = FALSE,
data=line_data,aes(x=x,y=y,group=x),
alpha=0.3,linetype="dashed") +
geom_text(inherit.aes = FALSE,
data=plot_ghgs_totals %>% filter(year %in% c(1990,2000,2010,2020,2023)),
aes(x=year,y=63,label=paste(signif(totals,3))),
size=3.5,colour="#252525") +
#ylab("GHG Emissions (GtCO2e/year)") +
scale_fill_manual(values=c("#e78ac3","#fc8d62","#8da0cb","#66c2a5","#a6d854")) +
scale_x_continuous(breaks=c(1990,2000,2010,2020,2023)) +
theme_wl() +
theme(axis.title.x = element_blank(),
axis.line.x=element_line(colour='#636363'),
axis.line.y=element_line(colour='#636363'),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
legend.position = "right",
legend.title = element_blank()) +
labs(title="Total net anthropogenic greenhouse gas emissions from 1990-2023",
subtitle=bquote("Gt" ~CO[2]~ "/year"),
caption=bquote("Non-" ~CO[2]~ "greenhouse gases are converted to" ~CO[2]~ "equivalents using global warming potentials with a 100-year time horizon from the IPCC WGI AR6 (Forster et al., 2021). Sources: Crippa et al. (2024), Friedlingstein et al. (2023)."))
plot_ghgs %>% ggplot(aes(x=year,y=value,fill=fct_rev(gas))) +
geom_area(color="#636363") +
geom_line(inherit.aes = FALSE,
data=line_data,aes(x=x,y=y,group=x),
alpha=0.3,linetype="dashed") +
geom_text(inherit.aes = FALSE,
data=plot_ghgs_totals %>% filter(year %in% c(1990,2000,2010,2020,2023)),
aes(x=year,y=63,label=paste(signif(totals,3))),
size=3.5,colour="#252525") +
#ylab("GHG Emissions (GtCO2e/year)") +
scale_fill_manual(values=c("#e78ac3","#fc8d62","#8da0cb","#66c2a5","#a6d854")) +
scale_x_continuous(breaks=c(1990,2000,2010,2020,2023)) +
theme_wl() +
theme(axis.title.x = element_blank(),
axis.line.x=element_line(colour='#636363'),
axis.line.y=element_line(colour='#636363'),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
legend.position = "right",
legend.title = element_blank()) +
labs(title="Total net anthropogenic greenhouse gas emissions from 1990-2023",
subtitle=bquote("Gt" ~CO[2]~ "/year"),
caption=str_wrap(bquote("Non-" ~CO[2]~ "greenhouse gases are converted to" ~CO[2]~ "equivalents using global warming potentials with a 100-year time horizon from the IPCC WGI AR6 (Forster et al., 2021). Sources: Crippa et al. (2024), Friedlingstein et al. (2023)."),125))
library(ggtext)
install.packages('ggtext')
plot_ghgs %>% ggplot(aes(x=year,y=value,fill=fct_rev(gas))) +
geom_area(color="#636363") +
geom_line(inherit.aes = FALSE,
data=line_data,aes(x=x,y=y,group=x),
alpha=0.3,linetype="dashed") +
geom_text(inherit.aes = FALSE,
data=plot_ghgs_totals %>% filter(year %in% c(1990,2000,2010,2020,2023)),
aes(x=year,y=63,label=paste(signif(totals,3))),
size=3.5,colour="#252525") +
#ylab("GHG Emissions (GtCO2e/year)") +
scale_fill_manual(values=c("#e78ac3","#fc8d62","#8da0cb","#66c2a5","#a6d854")) +
scale_x_continuous(breaks=c(1990,2000,2010,2020,2023)) +
theme_wl() +
labs(title="Total net anthropogenic greenhouse gas emissions from 1990-2023",
subtitle=bquote("Gt" ~CO[2]~ "/year"),
caption=bquote("Non-" ~CO[2]~ "greenhouse gases are converted to" ~CO[2]~ "equivalents using global warming potentials with a 100-year time horizon from the IPCC WGI AR6 (Forster et al., 2021). Sources: Crippa et al. (2024), Friedlingstein et al. (2023).")) +
theme(axis.title.x = element_blank(),
axis.line.x=element_line(colour='#636363'),
axis.line.y=element_line(colour='#636363'),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
legend.position = "right",
legend.title = element_blank(),
plot.caption=element_textbox_simple(hjust=0, size=14))
library(ggtext)
plot_ghgs %>% ggplot(aes(x=year,y=value,fill=fct_rev(gas))) +
geom_area(color="#636363") +
geom_line(inherit.aes = FALSE,
data=line_data,aes(x=x,y=y,group=x),
alpha=0.3,linetype="dashed") +
geom_text(inherit.aes = FALSE,
data=plot_ghgs_totals %>% filter(year %in% c(1990,2000,2010,2020,2023)),
aes(x=year,y=63,label=paste(signif(totals,3))),
size=3.5,colour="#252525") +
#ylab("GHG Emissions (GtCO2e/year)") +
scale_fill_manual(values=c("#e78ac3","#fc8d62","#8da0cb","#66c2a5","#a6d854")) +
scale_x_continuous(breaks=c(1990,2000,2010,2020,2023)) +
theme_wl() +
labs(title="Total net anthropogenic greenhouse gas emissions from 1990-2023",
subtitle=bquote("Gt" ~CO[2]~ "/year"),
caption=bquote("Non-" ~CO[2]~ "greenhouse gases are converted to" ~CO[2]~ "equivalents using global warming potentials with a 100-year time horizon from the IPCC WGI AR6 (Forster et al., 2021). Sources: Crippa et al. (2024), Friedlingstein et al. (2023).")) +
theme(axis.title.x = element_blank(),
axis.line.x=element_line(colour='#636363'),
axis.line.y=element_line(colour='#636363'),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
legend.position = "right",
legend.title = element_blank(),
plot.caption=element_textbox_simple(hjust=0, size=14))
plot_ghgs %>% ggplot(aes(x=year,y=value,fill=fct_rev(gas))) +
geom_area(color="#636363") +
geom_line(inherit.aes = FALSE,
data=line_data,aes(x=x,y=y,group=x),
alpha=0.3,linetype="dashed") +
geom_text(inherit.aes = FALSE,
data=plot_ghgs_totals %>% filter(year %in% c(1990,2000,2010,2020,2023)),
aes(x=year,y=63,label=paste(signif(totals,3))),
size=3.5,colour="#252525") +
#ylab("GHG Emissions (GtCO2e/year)") +
scale_fill_manual(values=c("#e78ac3","#fc8d62","#8da0cb","#66c2a5","#a6d854")) +
scale_x_continuous(breaks=c(1990,2000,2010,2020,2023)) +
theme_wl() +
labs(title="Total net anthropogenic greenhouse gas emissions from 1990-2023",
subtitle=bquote("Gt" ~CO[2]~ "/year"),
caption=str_wrap("Non-CO2 greenhouse gases are converted to CO2 equivalents using global warming potentials with a 100-year time horizon from the IPCC WGI AR6 (Forster et al., 2021). Sources: Crippa et al. (2024), Friedlingstein et al. (2023).",125)) +
theme(axis.title.x = element_blank(),
axis.line.x=element_line(colour='#636363'),
axis.line.y=element_line(colour='#636363'),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
legend.position = "right",
legend.title = element_blank(),
plot.caption=element_textbox_simple(hjust=0, size=14))
plot_ghgs %>% ggplot(aes(x=year,y=value,fill=fct_rev(gas))) +
geom_area(color="#636363") +
geom_line(inherit.aes = FALSE,
data=line_data,aes(x=x,y=y,group=x),
alpha=0.3,linetype="dashed") +
geom_text(inherit.aes = FALSE,
data=plot_ghgs_totals %>% filter(year %in% c(1990,2000,2010,2020,2023)),
aes(x=year,y=63,label=paste(signif(totals,3))),
size=3.5,colour="#252525") +
#ylab("GHG Emissions (GtCO2e/year)") +
scale_fill_manual(values=c("#e78ac3","#fc8d62","#8da0cb","#66c2a5","#a6d854")) +
scale_x_continuous(breaks=c(1990,2000,2010,2020,2023)) +
theme_wl() +
labs(title="Total net anthropogenic greenhouse gas emissions from 1990-2023",
subtitle=bquote("Gt" ~CO[2]~ "/year"),
caption=str_wrap("Non-CO2 greenhouse gases are converted to CO2 equivalents using global warming potentials with a 100-year time horizon from the IPCC WGI AR6 (Forster et al., 2021). Sources: Crippa et al. (2024), Friedlingstein et al. (2023).",125)) +
theme(axis.title.x = element_blank(),
axis.line.x=element_line(colour='#636363'),
axis.line.y=element_line(colour='#636363'),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
legend.position = "right",
legend.title = element_blank())
plot_ghgs %>% ggplot(aes(x=year,y=value,fill=fct_rev(gas))) +
geom_area(color="#636363") +
geom_line(inherit.aes = FALSE,
data=line_data,aes(x=x,y=y,group=x),
alpha=0.3,linetype="dashed") +
geom_text(inherit.aes = FALSE,
data=plot_ghgs_totals %>% filter(year %in% c(1990,2000,2010,2020,2023)),
aes(x=year,y=63,label=paste(signif(totals,3))),
size=3.5,colour="#252525") +
#ylab("GHG Emissions (GtCO2e/year)") +
scale_fill_manual(values=c("#e78ac3","#fc8d62","#8da0cb","#66c2a5","#a6d854")) +
scale_x_continuous(breaks=c(1990,2000,2010,2020,2023)) +
theme_wl() +
labs(title="Total net anthropogenic greenhouse gas emissions from 1990-2023",
subtitle=bquote("Gt" ~CO[2]~ "/year"),
caption=str_wrap("Non-CO2 greenhouse gases are converted to CO2 equivalents using global warming potentials with a 100-year time horizon from the IPCC WGI AR6 (Forster et al., 2021). Sources: Crippa et al. (2024), Friedlingstein et al. (2023).",125)) +
theme(axis.title.x = element_blank(),
axis.line.x=element_line(colour='#636363'),
axis.line.y=element_line(colour='#636363'),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
legend.position = "right",
legend.title = element_blank(),
plot.caption=element_textbox_simple(hjust=0))
plot_ghgs %>% ggplot(aes(x=year,y=value,fill=fct_rev(gas))) +
geom_area(color="#636363") +
geom_line(inherit.aes = FALSE,
data=line_data,aes(x=x,y=y,group=x),
alpha=0.3,linetype="dashed") +
geom_text(inherit.aes = FALSE,
data=plot_ghgs_totals %>% filter(year %in% c(1990,2000,2010,2020,2023)),
aes(x=year,y=63,label=paste(signif(totals,3))),
size=3.5,colour="#252525") +
#ylab("GHG Emissions (GtCO2e/year)") +
scale_fill_manual(values=c("#e78ac3","#fc8d62","#8da0cb","#66c2a5","#a6d854")) +
scale_x_continuous(breaks=c(1990,2000,2010,2020,2023)) +
theme_wl() +
labs(title="Total net anthropogenic greenhouse gas emissions from 1990-2023",
subtitle=bquote("Gt" ~CO[2]~ "/year"),
caption=str_wrap("Non-CO2 greenhouse gases are converted to CO2 equivalents using global warming potentials with a 100-year time horizon from the IPCC WGI AR6 (Forster et al., 2021). Sources: Crippa et al. (2024), Friedlingstein et al. (2023).",125)) +
theme(axis.title.x = element_blank(),
axis.line.x=element_line(colour='#636363'),
axis.line.y=element_line(colour='#636363'),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
legend.position = "right",
legend.title = element_blank())
plot_ghgs %>% ggplot(aes(x=year,y=value,fill=fct_rev(gas))) +
geom_area(color="#636363") +
geom_line(inherit.aes = FALSE,
data=line_data,aes(x=x,y=y,group=x),
alpha=0.3,linetype="dashed") +
geom_text(inherit.aes = FALSE,
data=plot_ghgs_totals %>% filter(year %in% c(1990,2000,2010,2020,2023)),
aes(x=year,y=63,label=paste(signif(totals,3))),
size=3.5,colour="#252525") +
#ylab("GHG Emissions (GtCO2e/year)") +
scale_fill_manual(values=c("#e78ac3","#fc8d62","#8da0cb","#66c2a5","#a6d854")) +
scale_x_continuous(breaks=c(1990,2000,2010,2020,2023)) +
theme_wl() +
labs(title="Total net anthropogenic greenhouse gas emissions from 1990-2023",
subtitle=bquote("Gt" ~CO[2]~ "/year"),
caption=str_wrap("Non-CO2 greenhouse gases are converted to CO2 equivalents using global warming potentials with a 100-year time horizon from the IPCC AR6 WGI (Forster et al., 2021). Sources: Crippa et al. (2024), Friedlingstein et al. (2023).",125)) +
theme(axis.title = element_blank(),
axis.line.x=element_line(colour='#636363'),
axis.line.y=element_line(colour='#636363'),
panel.grid.major.x = element_blank(),
panel.border = element_blank(),
legend.position = "right",
legend.title = element_blank())
